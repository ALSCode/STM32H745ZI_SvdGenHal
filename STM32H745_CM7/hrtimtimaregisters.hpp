/*******************************************************************************
* Filename      : hrtimtimaregisters.hpp
*
* Details       : High Resolution Timer: TIMA. This header file is
*                 auto-generated for STM32H745_CM7 device.
*
*
*******************************************************************************/

#if !defined(HRTIMTIMAREGISTERS_HPP)
#define HRTIMTIMAREGISTERS_HPP

#include "hrtimtimafieldvalues.hpp"  //for Bits Fields defs 
#include "registerbase.hpp"   //for RegisterBase
#include "register.hpp"       //for Register
#include "accessmode.hpp"     //for ReadMode, WriteMode, ReadWriteMode  

struct HRTIM_TIMA
{
  struct HRTIM_TIMATIMACRBase {} ;

  struct TIMACR : public RegisterBase<0x40017480, 32, ReadWriteMode>
  {
    using UPDGAT = HRTIM_TIMA_TIMACR_UPDGAT_Values<HRTIM_TIMA::TIMACR, 28, 4, ReadWriteMode, HRTIM_TIMATIMACRBase> ;
    using PREEN = HRTIM_TIMA_TIMACR_PREEN_Values<HRTIM_TIMA::TIMACR, 27, 1, ReadWriteMode, HRTIM_TIMATIMACRBase> ;
    using DACSYNC = HRTIM_TIMA_TIMACR_DACSYNC_Values<HRTIM_TIMA::TIMACR, 25, 2, ReadWriteMode, HRTIM_TIMATIMACRBase> ;
    using MSTU = HRTIM_TIMA_TIMACR_MSTU_Values<HRTIM_TIMA::TIMACR, 24, 1, ReadWriteMode, HRTIM_TIMATIMACRBase> ;
    using TEU = HRTIM_TIMA_TIMACR_TEU_Values<HRTIM_TIMA::TIMACR, 23, 1, ReadWriteMode, HRTIM_TIMATIMACRBase> ;
    using TDU = HRTIM_TIMA_TIMACR_TDU_Values<HRTIM_TIMA::TIMACR, 22, 1, ReadWriteMode, HRTIM_TIMATIMACRBase> ;
    using TCU = HRTIM_TIMA_TIMACR_TCU_Values<HRTIM_TIMA::TIMACR, 21, 1, ReadWriteMode, HRTIM_TIMATIMACRBase> ;
    using TBU = HRTIM_TIMA_TIMACR_TBU_Values<HRTIM_TIMA::TIMACR, 20, 1, ReadWriteMode, HRTIM_TIMATIMACRBase> ;
    using TxRSTU = HRTIM_TIMA_TIMACR_TxRSTU_Values<HRTIM_TIMA::TIMACR, 18, 1, ReadWriteMode, HRTIM_TIMATIMACRBase> ;
    using TxREPU = HRTIM_TIMA_TIMACR_TxREPU_Values<HRTIM_TIMA::TIMACR, 17, 1, ReadWriteMode, HRTIM_TIMATIMACRBase> ;
    using DELCMP4 = HRTIM_TIMA_TIMACR_DELCMP4_Values<HRTIM_TIMA::TIMACR, 14, 2, ReadWriteMode, HRTIM_TIMATIMACRBase> ;
    using DELCMP2 = HRTIM_TIMA_TIMACR_DELCMP2_Values<HRTIM_TIMA::TIMACR, 12, 2, ReadWriteMode, HRTIM_TIMATIMACRBase> ;
    using SYNCSTRTx = HRTIM_TIMA_TIMACR_SYNCSTRTx_Values<HRTIM_TIMA::TIMACR, 11, 1, ReadWriteMode, HRTIM_TIMATIMACRBase> ;
    using SYNCRSTx = HRTIM_TIMA_TIMACR_SYNCRSTx_Values<HRTIM_TIMA::TIMACR, 10, 1, ReadWriteMode, HRTIM_TIMATIMACRBase> ;
    using PSHPLL = HRTIM_TIMA_TIMACR_PSHPLL_Values<HRTIM_TIMA::TIMACR, 6, 1, ReadWriteMode, HRTIM_TIMATIMACRBase> ;
    using HALF = HRTIM_TIMA_TIMACR_HALF_Values<HRTIM_TIMA::TIMACR, 5, 1, ReadWriteMode, HRTIM_TIMATIMACRBase> ;
    using RETRIG = HRTIM_TIMA_TIMACR_RETRIG_Values<HRTIM_TIMA::TIMACR, 4, 1, ReadWriteMode, HRTIM_TIMATIMACRBase> ;
    using CONT = HRTIM_TIMA_TIMACR_CONT_Values<HRTIM_TIMA::TIMACR, 3, 1, ReadWriteMode, HRTIM_TIMATIMACRBase> ;
    using CK_PSCx = HRTIM_TIMA_TIMACR_CK_PSCx_Values<HRTIM_TIMA::TIMACR, 0, 3, ReadWriteMode, HRTIM_TIMATIMACRBase> ;
    using FieldValues = HRTIM_TIMA_TIMACR_CK_PSCx_Values<HRTIM_TIMA::TIMACR, 0, 0, NoAccess, NoAccess> ;
  } ;

  template<typename... T> 
  using TIMACRPack  = Register<0x40017480, 32, ReadWriteMode, HRTIM_TIMATIMACRBase, T...> ;

  struct HRTIM_TIMATIMAISRBase {} ;

  struct TIMAISR : public RegisterBase<0x40017484, 32, ReadMode>
  {
    using O2STAT = HRTIM_TIMA_TIMAISR_O2STAT_Values<HRTIM_TIMA::TIMAISR, 19, 1, ReadMode, HRTIM_TIMATIMAISRBase> ;
    using O1STAT = HRTIM_TIMA_TIMAISR_O1STAT_Values<HRTIM_TIMA::TIMAISR, 18, 1, ReadMode, HRTIM_TIMATIMAISRBase> ;
    using IPPSTAT = HRTIM_TIMA_TIMAISR_IPPSTAT_Values<HRTIM_TIMA::TIMAISR, 17, 1, ReadMode, HRTIM_TIMATIMAISRBase> ;
    using CPPSTAT = HRTIM_TIMA_TIMAISR_CPPSTAT_Values<HRTIM_TIMA::TIMAISR, 16, 1, ReadMode, HRTIM_TIMATIMAISRBase> ;
    using DLYPRT = HRTIM_TIMA_TIMAISR_DLYPRT_Values<HRTIM_TIMA::TIMAISR, 14, 1, ReadMode, HRTIM_TIMATIMAISRBase> ;
    using RST = HRTIM_TIMA_TIMAISR_RST_Values<HRTIM_TIMA::TIMAISR, 13, 1, ReadMode, HRTIM_TIMATIMAISRBase> ;
    using RSTx2 = HRTIM_TIMA_TIMAISR_RSTx2_Values<HRTIM_TIMA::TIMAISR, 12, 1, ReadMode, HRTIM_TIMATIMAISRBase> ;
    using SETx2 = HRTIM_TIMA_TIMAISR_SETx2_Values<HRTIM_TIMA::TIMAISR, 11, 1, ReadMode, HRTIM_TIMATIMAISRBase> ;
    using RSTx1 = HRTIM_TIMA_TIMAISR_RSTx1_Values<HRTIM_TIMA::TIMAISR, 10, 1, ReadMode, HRTIM_TIMATIMAISRBase> ;
    using SETx1 = HRTIM_TIMA_TIMAISR_SETx1_Values<HRTIM_TIMA::TIMAISR, 9, 1, ReadMode, HRTIM_TIMATIMAISRBase> ;
    using CPT2 = HRTIM_TIMA_TIMAISR_CPT2_Values<HRTIM_TIMA::TIMAISR, 8, 1, ReadMode, HRTIM_TIMATIMAISRBase> ;
    using CPT1 = HRTIM_TIMA_TIMAISR_CPT1_Values<HRTIM_TIMA::TIMAISR, 7, 1, ReadMode, HRTIM_TIMATIMAISRBase> ;
    using UPD = HRTIM_TIMA_TIMAISR_UPD_Values<HRTIM_TIMA::TIMAISR, 6, 1, ReadMode, HRTIM_TIMATIMAISRBase> ;
    using REP = HRTIM_TIMA_TIMAISR_REP_Values<HRTIM_TIMA::TIMAISR, 4, 1, ReadMode, HRTIM_TIMATIMAISRBase> ;
    using CMP4 = HRTIM_TIMA_TIMAISR_CMP4_Values<HRTIM_TIMA::TIMAISR, 3, 1, ReadMode, HRTIM_TIMATIMAISRBase> ;
    using CMP3 = HRTIM_TIMA_TIMAISR_CMP3_Values<HRTIM_TIMA::TIMAISR, 2, 1, ReadMode, HRTIM_TIMATIMAISRBase> ;
    using CMP2 = HRTIM_TIMA_TIMAISR_CMP2_Values<HRTIM_TIMA::TIMAISR, 1, 1, ReadMode, HRTIM_TIMATIMAISRBase> ;
    using CMP1 = HRTIM_TIMA_TIMAISR_CMP1_Values<HRTIM_TIMA::TIMAISR, 0, 1, ReadMode, HRTIM_TIMATIMAISRBase> ;
    using FieldValues = HRTIM_TIMA_TIMAISR_CMP1_Values<HRTIM_TIMA::TIMAISR, 0, 0, NoAccess, NoAccess> ;
  } ;

  template<typename... T> 
  using TIMAISRPack  = Register<0x40017484, 32, ReadMode, HRTIM_TIMATIMAISRBase, T...> ;

  struct HRTIM_TIMATIMAICRBase {} ;

  struct TIMAICR : public RegisterBase<0x40017488, 32, WriteMode>
  {
    using DLYPRTC = HRTIM_TIMA_TIMAICR_DLYPRTC_Values<HRTIM_TIMA::TIMAICR, 14, 1, WriteMode, HRTIM_TIMATIMAICRBase> ;
    using RSTC = HRTIM_TIMA_TIMAICR_RSTC_Values<HRTIM_TIMA::TIMAICR, 13, 1, WriteMode, HRTIM_TIMATIMAICRBase> ;
    using RSTx2C = HRTIM_TIMA_TIMAICR_RSTx2C_Values<HRTIM_TIMA::TIMAICR, 12, 1, WriteMode, HRTIM_TIMATIMAICRBase> ;
    using SET2xC = HRTIM_TIMA_TIMAICR_SET2xC_Values<HRTIM_TIMA::TIMAICR, 11, 1, WriteMode, HRTIM_TIMATIMAICRBase> ;
    using RSTx1C = HRTIM_TIMA_TIMAICR_RSTx1C_Values<HRTIM_TIMA::TIMAICR, 10, 1, WriteMode, HRTIM_TIMATIMAICRBase> ;
    using SET1xC = HRTIM_TIMA_TIMAICR_SET1xC_Values<HRTIM_TIMA::TIMAICR, 9, 1, WriteMode, HRTIM_TIMATIMAICRBase> ;
    using CPT2C = HRTIM_TIMA_TIMAICR_CPT2C_Values<HRTIM_TIMA::TIMAICR, 8, 1, WriteMode, HRTIM_TIMATIMAICRBase> ;
    using CPT1C = HRTIM_TIMA_TIMAICR_CPT1C_Values<HRTIM_TIMA::TIMAICR, 7, 1, WriteMode, HRTIM_TIMATIMAICRBase> ;
    using UPDC = HRTIM_TIMA_TIMAICR_UPDC_Values<HRTIM_TIMA::TIMAICR, 6, 1, WriteMode, HRTIM_TIMATIMAICRBase> ;
    using REPC = HRTIM_TIMA_TIMAICR_REPC_Values<HRTIM_TIMA::TIMAICR, 4, 1, WriteMode, HRTIM_TIMATIMAICRBase> ;
    using CMP4C = HRTIM_TIMA_TIMAICR_CMP4C_Values<HRTIM_TIMA::TIMAICR, 3, 1, WriteMode, HRTIM_TIMATIMAICRBase> ;
    using CMP3C = HRTIM_TIMA_TIMAICR_CMP3C_Values<HRTIM_TIMA::TIMAICR, 2, 1, WriteMode, HRTIM_TIMATIMAICRBase> ;
    using CMP2C = HRTIM_TIMA_TIMAICR_CMP2C_Values<HRTIM_TIMA::TIMAICR, 1, 1, WriteMode, HRTIM_TIMATIMAICRBase> ;
    using CMP1C = HRTIM_TIMA_TIMAICR_CMP1C_Values<HRTIM_TIMA::TIMAICR, 0, 1, WriteMode, HRTIM_TIMATIMAICRBase> ;
    using FieldValues = HRTIM_TIMA_TIMAICR_CMP1C_Values<HRTIM_TIMA::TIMAICR, 0, 0, NoAccess, NoAccess> ;
  } ;

  template<typename... T> 
  using TIMAICRPack  = Register<0x40017488, 32, WriteMode, HRTIM_TIMATIMAICRBase, T...> ;

  struct HRTIM_TIMATIMADIER5Base {} ;

  struct TIMADIER5 : public RegisterBase<0x4001748C, 32, ReadWriteMode>
  {
    using DLYPRTDE = HRTIM_TIMA_TIMADIER5_DLYPRTDE_Values<HRTIM_TIMA::TIMADIER5, 30, 1, ReadWriteMode, HRTIM_TIMATIMADIER5Base> ;
    using RSTDE = HRTIM_TIMA_TIMADIER5_RSTDE_Values<HRTIM_TIMA::TIMADIER5, 29, 1, ReadWriteMode, HRTIM_TIMATIMADIER5Base> ;
    using RSTx2DE = HRTIM_TIMA_TIMADIER5_RSTx2DE_Values<HRTIM_TIMA::TIMADIER5, 28, 1, ReadWriteMode, HRTIM_TIMATIMADIER5Base> ;
    using SETx2DE = HRTIM_TIMA_TIMADIER5_SETx2DE_Values<HRTIM_TIMA::TIMADIER5, 27, 1, ReadWriteMode, HRTIM_TIMATIMADIER5Base> ;
    using RSTx1DE = HRTIM_TIMA_TIMADIER5_RSTx1DE_Values<HRTIM_TIMA::TIMADIER5, 26, 1, ReadWriteMode, HRTIM_TIMATIMADIER5Base> ;
    using SET1xDE = HRTIM_TIMA_TIMADIER5_SET1xDE_Values<HRTIM_TIMA::TIMADIER5, 25, 1, ReadWriteMode, HRTIM_TIMATIMADIER5Base> ;
    using CPT2DE = HRTIM_TIMA_TIMADIER5_CPT2DE_Values<HRTIM_TIMA::TIMADIER5, 24, 1, ReadWriteMode, HRTIM_TIMATIMADIER5Base> ;
    using CPT1DE = HRTIM_TIMA_TIMADIER5_CPT1DE_Values<HRTIM_TIMA::TIMADIER5, 23, 1, ReadWriteMode, HRTIM_TIMATIMADIER5Base> ;
    using UPDDE = HRTIM_TIMA_TIMADIER5_UPDDE_Values<HRTIM_TIMA::TIMADIER5, 22, 1, ReadWriteMode, HRTIM_TIMATIMADIER5Base> ;
    using REPDE = HRTIM_TIMA_TIMADIER5_REPDE_Values<HRTIM_TIMA::TIMADIER5, 20, 1, ReadWriteMode, HRTIM_TIMATIMADIER5Base> ;
    using CMP4DE = HRTIM_TIMA_TIMADIER5_CMP4DE_Values<HRTIM_TIMA::TIMADIER5, 19, 1, ReadWriteMode, HRTIM_TIMATIMADIER5Base> ;
    using CMP3DE = HRTIM_TIMA_TIMADIER5_CMP3DE_Values<HRTIM_TIMA::TIMADIER5, 18, 1, ReadWriteMode, HRTIM_TIMATIMADIER5Base> ;
    using CMP2DE = HRTIM_TIMA_TIMADIER5_CMP2DE_Values<HRTIM_TIMA::TIMADIER5, 17, 1, ReadWriteMode, HRTIM_TIMATIMADIER5Base> ;
    using CMP1DE = HRTIM_TIMA_TIMADIER5_CMP1DE_Values<HRTIM_TIMA::TIMADIER5, 16, 1, ReadWriteMode, HRTIM_TIMATIMADIER5Base> ;
    using DLYPRTIE = HRTIM_TIMA_TIMADIER5_DLYPRTIE_Values<HRTIM_TIMA::TIMADIER5, 14, 1, ReadWriteMode, HRTIM_TIMATIMADIER5Base> ;
    using RSTIE = HRTIM_TIMA_TIMADIER5_RSTIE_Values<HRTIM_TIMA::TIMADIER5, 13, 1, ReadWriteMode, HRTIM_TIMATIMADIER5Base> ;
    using RSTx2IE = HRTIM_TIMA_TIMADIER5_RSTx2IE_Values<HRTIM_TIMA::TIMADIER5, 12, 1, ReadWriteMode, HRTIM_TIMATIMADIER5Base> ;
    using SETx2IE = HRTIM_TIMA_TIMADIER5_SETx2IE_Values<HRTIM_TIMA::TIMADIER5, 11, 1, ReadWriteMode, HRTIM_TIMATIMADIER5Base> ;
    using RSTx1IE = HRTIM_TIMA_TIMADIER5_RSTx1IE_Values<HRTIM_TIMA::TIMADIER5, 10, 1, ReadWriteMode, HRTIM_TIMATIMADIER5Base> ;
    using SET1xIE = HRTIM_TIMA_TIMADIER5_SET1xIE_Values<HRTIM_TIMA::TIMADIER5, 9, 1, ReadWriteMode, HRTIM_TIMATIMADIER5Base> ;
    using CPT2IE = HRTIM_TIMA_TIMADIER5_CPT2IE_Values<HRTIM_TIMA::TIMADIER5, 8, 1, ReadWriteMode, HRTIM_TIMATIMADIER5Base> ;
    using CPT1IE = HRTIM_TIMA_TIMADIER5_CPT1IE_Values<HRTIM_TIMA::TIMADIER5, 7, 1, ReadWriteMode, HRTIM_TIMATIMADIER5Base> ;
    using UPDIE = HRTIM_TIMA_TIMADIER5_UPDIE_Values<HRTIM_TIMA::TIMADIER5, 6, 1, ReadWriteMode, HRTIM_TIMATIMADIER5Base> ;
    using REPIE = HRTIM_TIMA_TIMADIER5_REPIE_Values<HRTIM_TIMA::TIMADIER5, 4, 1, ReadWriteMode, HRTIM_TIMATIMADIER5Base> ;
    using CMP4IE = HRTIM_TIMA_TIMADIER5_CMP4IE_Values<HRTIM_TIMA::TIMADIER5, 3, 1, ReadWriteMode, HRTIM_TIMATIMADIER5Base> ;
    using CMP3IE = HRTIM_TIMA_TIMADIER5_CMP3IE_Values<HRTIM_TIMA::TIMADIER5, 2, 1, ReadWriteMode, HRTIM_TIMATIMADIER5Base> ;
    using CMP2IE = HRTIM_TIMA_TIMADIER5_CMP2IE_Values<HRTIM_TIMA::TIMADIER5, 1, 1, ReadWriteMode, HRTIM_TIMATIMADIER5Base> ;
    using CMP1IE = HRTIM_TIMA_TIMADIER5_CMP1IE_Values<HRTIM_TIMA::TIMADIER5, 0, 1, ReadWriteMode, HRTIM_TIMATIMADIER5Base> ;
    using FieldValues = HRTIM_TIMA_TIMADIER5_CMP1IE_Values<HRTIM_TIMA::TIMADIER5, 0, 0, NoAccess, NoAccess> ;
  } ;

  template<typename... T> 
  using TIMADIER5Pack  = Register<0x4001748C, 32, ReadWriteMode, HRTIM_TIMATIMADIER5Base, T...> ;

  struct HRTIM_TIMACNTARBase {} ;

  struct CNTAR : public RegisterBase<0x40017490, 32, ReadWriteMode>
  {
    using CNTx = HRTIM_TIMA_CNTAR_CNTx_Values<HRTIM_TIMA::CNTAR, 0, 16, ReadWriteMode, HRTIM_TIMACNTARBase> ;
    using FieldValues = HRTIM_TIMA_CNTAR_CNTx_Values<HRTIM_TIMA::CNTAR, 0, 0, NoAccess, NoAccess> ;
  } ;

  template<typename... T> 
  using CNTARPack  = Register<0x40017490, 32, ReadWriteMode, HRTIM_TIMACNTARBase, T...> ;

  struct HRTIM_TIMAPERARBase {} ;

  struct PERAR : public RegisterBase<0x40017494, 32, ReadWriteMode>
  {
    using PERx = HRTIM_TIMA_PERAR_PERx_Values<HRTIM_TIMA::PERAR, 0, 16, ReadWriteMode, HRTIM_TIMAPERARBase> ;
    using FieldValues = HRTIM_TIMA_PERAR_PERx_Values<HRTIM_TIMA::PERAR, 0, 0, NoAccess, NoAccess> ;
  } ;

  template<typename... T> 
  using PERARPack  = Register<0x40017494, 32, ReadWriteMode, HRTIM_TIMAPERARBase, T...> ;

  struct HRTIM_TIMAREPARBase {} ;

  struct REPAR : public RegisterBase<0x40017498, 32, ReadWriteMode>
  {
    using REPx = HRTIM_TIMA_REPAR_REPx_Values<HRTIM_TIMA::REPAR, 0, 8, ReadWriteMode, HRTIM_TIMAREPARBase> ;
    using FieldValues = HRTIM_TIMA_REPAR_REPx_Values<HRTIM_TIMA::REPAR, 0, 0, NoAccess, NoAccess> ;
  } ;

  template<typename... T> 
  using REPARPack  = Register<0x40017498, 32, ReadWriteMode, HRTIM_TIMAREPARBase, T...> ;

  struct HRTIM_TIMACMP1ARBase {} ;

  struct CMP1AR : public RegisterBase<0x4001749C, 32, ReadWriteMode>
  {
    using CMP1x = HRTIM_TIMA_CMP1AR_CMP1x_Values<HRTIM_TIMA::CMP1AR, 0, 16, ReadWriteMode, HRTIM_TIMACMP1ARBase> ;
    using FieldValues = HRTIM_TIMA_CMP1AR_CMP1x_Values<HRTIM_TIMA::CMP1AR, 0, 0, NoAccess, NoAccess> ;
  } ;

  template<typename... T> 
  using CMP1ARPack  = Register<0x4001749C, 32, ReadWriteMode, HRTIM_TIMACMP1ARBase, T...> ;

  struct HRTIM_TIMACMP1CARBase {} ;

  struct CMP1CAR : public RegisterBase<0x400174A0, 32, ReadWriteMode>
  {
    using REPx = HRTIM_TIMA_CMP1CAR_REPx_Values<HRTIM_TIMA::CMP1CAR, 16, 8, ReadWriteMode, HRTIM_TIMACMP1CARBase> ;
    using CMP1x = HRTIM_TIMA_CMP1CAR_CMP1x_Values<HRTIM_TIMA::CMP1CAR, 0, 16, ReadWriteMode, HRTIM_TIMACMP1CARBase> ;
    using FieldValues = HRTIM_TIMA_CMP1CAR_CMP1x_Values<HRTIM_TIMA::CMP1CAR, 0, 0, NoAccess, NoAccess> ;
  } ;

  template<typename... T> 
  using CMP1CARPack  = Register<0x400174A0, 32, ReadWriteMode, HRTIM_TIMACMP1CARBase, T...> ;

  struct HRTIM_TIMACMP2ARBase {} ;

  struct CMP2AR : public RegisterBase<0x400174A4, 32, ReadWriteMode>
  {
    using CMP2x = HRTIM_TIMA_CMP2AR_CMP2x_Values<HRTIM_TIMA::CMP2AR, 0, 16, ReadWriteMode, HRTIM_TIMACMP2ARBase> ;
    using FieldValues = HRTIM_TIMA_CMP2AR_CMP2x_Values<HRTIM_TIMA::CMP2AR, 0, 0, NoAccess, NoAccess> ;
  } ;

  template<typename... T> 
  using CMP2ARPack  = Register<0x400174A4, 32, ReadWriteMode, HRTIM_TIMACMP2ARBase, T...> ;

  struct HRTIM_TIMACMP3ARBase {} ;

  struct CMP3AR : public RegisterBase<0x400174A8, 32, ReadWriteMode>
  {
    using CMP3x = HRTIM_TIMA_CMP3AR_CMP3x_Values<HRTIM_TIMA::CMP3AR, 0, 16, ReadWriteMode, HRTIM_TIMACMP3ARBase> ;
    using FieldValues = HRTIM_TIMA_CMP3AR_CMP3x_Values<HRTIM_TIMA::CMP3AR, 0, 0, NoAccess, NoAccess> ;
  } ;

  template<typename... T> 
  using CMP3ARPack  = Register<0x400174A8, 32, ReadWriteMode, HRTIM_TIMACMP3ARBase, T...> ;

  struct HRTIM_TIMACMP4ARBase {} ;

  struct CMP4AR : public RegisterBase<0x400174AC, 32, ReadWriteMode>
  {
    using CMP4x = HRTIM_TIMA_CMP4AR_CMP4x_Values<HRTIM_TIMA::CMP4AR, 0, 16, ReadWriteMode, HRTIM_TIMACMP4ARBase> ;
    using FieldValues = HRTIM_TIMA_CMP4AR_CMP4x_Values<HRTIM_TIMA::CMP4AR, 0, 0, NoAccess, NoAccess> ;
  } ;

  template<typename... T> 
  using CMP4ARPack  = Register<0x400174AC, 32, ReadWriteMode, HRTIM_TIMACMP4ARBase, T...> ;

  struct HRTIM_TIMACPT1ARBase {} ;

  struct CPT1AR : public RegisterBase<0x400174B0, 32, ReadMode>
  {
    using CPT1x = HRTIM_TIMA_CPT1AR_CPT1x_Values<HRTIM_TIMA::CPT1AR, 0, 16, ReadMode, HRTIM_TIMACPT1ARBase> ;
    using FieldValues = HRTIM_TIMA_CPT1AR_CPT1x_Values<HRTIM_TIMA::CPT1AR, 0, 0, NoAccess, NoAccess> ;
  } ;

  template<typename... T> 
  using CPT1ARPack  = Register<0x400174B0, 32, ReadMode, HRTIM_TIMACPT1ARBase, T...> ;

  struct HRTIM_TIMACPT2ARBase {} ;

  struct CPT2AR : public RegisterBase<0x400174B4, 32, ReadMode>
  {
    using CPT2x = HRTIM_TIMA_CPT2AR_CPT2x_Values<HRTIM_TIMA::CPT2AR, 0, 16, ReadMode, HRTIM_TIMACPT2ARBase> ;
    using FieldValues = HRTIM_TIMA_CPT2AR_CPT2x_Values<HRTIM_TIMA::CPT2AR, 0, 0, NoAccess, NoAccess> ;
  } ;

  template<typename... T> 
  using CPT2ARPack  = Register<0x400174B4, 32, ReadMode, HRTIM_TIMACPT2ARBase, T...> ;

  struct HRTIM_TIMADTARBase {} ;

  struct DTAR : public RegisterBase<0x400174B8, 32, ReadWriteMode>
  {
    using DTFLKx = HRTIM_TIMA_DTAR_DTFLKx_Values<HRTIM_TIMA::DTAR, 31, 1, ReadWriteMode, HRTIM_TIMADTARBase> ;
    using DTFSLKx = HRTIM_TIMA_DTAR_DTFSLKx_Values<HRTIM_TIMA::DTAR, 30, 1, ReadWriteMode, HRTIM_TIMADTARBase> ;
    using SDTFx = HRTIM_TIMA_DTAR_SDTFx_Values<HRTIM_TIMA::DTAR, 25, 1, ReadWriteMode, HRTIM_TIMADTARBase> ;
    using DTFx = HRTIM_TIMA_DTAR_DTFx_Values<HRTIM_TIMA::DTAR, 16, 9, ReadWriteMode, HRTIM_TIMADTARBase> ;
    using DTRLKx = HRTIM_TIMA_DTAR_DTRLKx_Values<HRTIM_TIMA::DTAR, 15, 1, ReadWriteMode, HRTIM_TIMADTARBase> ;
    using DTRSLKx = HRTIM_TIMA_DTAR_DTRSLKx_Values<HRTIM_TIMA::DTAR, 14, 1, ReadWriteMode, HRTIM_TIMADTARBase> ;
    using DTPRSC = HRTIM_TIMA_DTAR_DTPRSC_Values<HRTIM_TIMA::DTAR, 10, 3, ReadWriteMode, HRTIM_TIMADTARBase> ;
    using SDTRx = HRTIM_TIMA_DTAR_SDTRx_Values<HRTIM_TIMA::DTAR, 9, 1, ReadWriteMode, HRTIM_TIMADTARBase> ;
    using DTRx = HRTIM_TIMA_DTAR_DTRx_Values<HRTIM_TIMA::DTAR, 0, 9, ReadWriteMode, HRTIM_TIMADTARBase> ;
    using FieldValues = HRTIM_TIMA_DTAR_DTRx_Values<HRTIM_TIMA::DTAR, 0, 0, NoAccess, NoAccess> ;
  } ;

  template<typename... T> 
  using DTARPack  = Register<0x400174B8, 32, ReadWriteMode, HRTIM_TIMADTARBase, T...> ;

  struct HRTIM_TIMASETA1RBase {} ;

  struct SETA1R : public RegisterBase<0x400174BC, 32, ReadWriteMode>
  {
    using UPDATE = HRTIM_TIMA_SETA1R_UPDATE_Values<HRTIM_TIMA::SETA1R, 31, 1, ReadWriteMode, HRTIM_TIMASETA1RBase> ;
    using EXTEVNT10 = HRTIM_TIMA_SETA1R_EXTEVNT10_Values<HRTIM_TIMA::SETA1R, 30, 1, ReadWriteMode, HRTIM_TIMASETA1RBase> ;
    using EXTEVNT9 = HRTIM_TIMA_SETA1R_EXTEVNT9_Values<HRTIM_TIMA::SETA1R, 29, 1, ReadWriteMode, HRTIM_TIMASETA1RBase> ;
    using EXTEVNT8 = HRTIM_TIMA_SETA1R_EXTEVNT8_Values<HRTIM_TIMA::SETA1R, 28, 1, ReadWriteMode, HRTIM_TIMASETA1RBase> ;
    using EXTEVNT7 = HRTIM_TIMA_SETA1R_EXTEVNT7_Values<HRTIM_TIMA::SETA1R, 27, 1, ReadWriteMode, HRTIM_TIMASETA1RBase> ;
    using EXTEVNT6 = HRTIM_TIMA_SETA1R_EXTEVNT6_Values<HRTIM_TIMA::SETA1R, 26, 1, ReadWriteMode, HRTIM_TIMASETA1RBase> ;
    using EXTEVNT5 = HRTIM_TIMA_SETA1R_EXTEVNT5_Values<HRTIM_TIMA::SETA1R, 25, 1, ReadWriteMode, HRTIM_TIMASETA1RBase> ;
    using EXTEVNT4 = HRTIM_TIMA_SETA1R_EXTEVNT4_Values<HRTIM_TIMA::SETA1R, 24, 1, ReadWriteMode, HRTIM_TIMASETA1RBase> ;
    using EXTEVNT3 = HRTIM_TIMA_SETA1R_EXTEVNT3_Values<HRTIM_TIMA::SETA1R, 23, 1, ReadWriteMode, HRTIM_TIMASETA1RBase> ;
    using EXTEVNT2 = HRTIM_TIMA_SETA1R_EXTEVNT2_Values<HRTIM_TIMA::SETA1R, 22, 1, ReadWriteMode, HRTIM_TIMASETA1RBase> ;
    using EXTEVNT1 = HRTIM_TIMA_SETA1R_EXTEVNT1_Values<HRTIM_TIMA::SETA1R, 21, 1, ReadWriteMode, HRTIM_TIMASETA1RBase> ;
    using TIMEVNT9 = HRTIM_TIMA_SETA1R_TIMEVNT9_Values<HRTIM_TIMA::SETA1R, 20, 1, ReadWriteMode, HRTIM_TIMASETA1RBase> ;
    using TIMEVNT8 = HRTIM_TIMA_SETA1R_TIMEVNT8_Values<HRTIM_TIMA::SETA1R, 19, 1, ReadWriteMode, HRTIM_TIMASETA1RBase> ;
    using TIMEVNT7 = HRTIM_TIMA_SETA1R_TIMEVNT7_Values<HRTIM_TIMA::SETA1R, 18, 1, ReadWriteMode, HRTIM_TIMASETA1RBase> ;
    using TIMEVNT6 = HRTIM_TIMA_SETA1R_TIMEVNT6_Values<HRTIM_TIMA::SETA1R, 17, 1, ReadWriteMode, HRTIM_TIMASETA1RBase> ;
    using TIMEVNT5 = HRTIM_TIMA_SETA1R_TIMEVNT5_Values<HRTIM_TIMA::SETA1R, 16, 1, ReadWriteMode, HRTIM_TIMASETA1RBase> ;
    using TIMEVNT4 = HRTIM_TIMA_SETA1R_TIMEVNT4_Values<HRTIM_TIMA::SETA1R, 15, 1, ReadWriteMode, HRTIM_TIMASETA1RBase> ;
    using TIMEVNT3 = HRTIM_TIMA_SETA1R_TIMEVNT3_Values<HRTIM_TIMA::SETA1R, 14, 1, ReadWriteMode, HRTIM_TIMASETA1RBase> ;
    using TIMEVNT2 = HRTIM_TIMA_SETA1R_TIMEVNT2_Values<HRTIM_TIMA::SETA1R, 13, 1, ReadWriteMode, HRTIM_TIMASETA1RBase> ;
    using TIMEVNT1 = HRTIM_TIMA_SETA1R_TIMEVNT1_Values<HRTIM_TIMA::SETA1R, 12, 1, ReadWriteMode, HRTIM_TIMASETA1RBase> ;
    using MSTCMP4 = HRTIM_TIMA_SETA1R_MSTCMP4_Values<HRTIM_TIMA::SETA1R, 11, 1, ReadWriteMode, HRTIM_TIMASETA1RBase> ;
    using MSTCMP3 = HRTIM_TIMA_SETA1R_MSTCMP3_Values<HRTIM_TIMA::SETA1R, 10, 1, ReadWriteMode, HRTIM_TIMASETA1RBase> ;
    using MSTCMP2 = HRTIM_TIMA_SETA1R_MSTCMP2_Values<HRTIM_TIMA::SETA1R, 9, 1, ReadWriteMode, HRTIM_TIMASETA1RBase> ;
    using MSTCMP1 = HRTIM_TIMA_SETA1R_MSTCMP1_Values<HRTIM_TIMA::SETA1R, 8, 1, ReadWriteMode, HRTIM_TIMASETA1RBase> ;
    using MSTPER = HRTIM_TIMA_SETA1R_MSTPER_Values<HRTIM_TIMA::SETA1R, 7, 1, ReadWriteMode, HRTIM_TIMASETA1RBase> ;
    using CMP4 = HRTIM_TIMA_SETA1R_CMP4_Values<HRTIM_TIMA::SETA1R, 6, 1, ReadWriteMode, HRTIM_TIMASETA1RBase> ;
    using CMP3 = HRTIM_TIMA_SETA1R_CMP3_Values<HRTIM_TIMA::SETA1R, 5, 1, ReadWriteMode, HRTIM_TIMASETA1RBase> ;
    using CMP2 = HRTIM_TIMA_SETA1R_CMP2_Values<HRTIM_TIMA::SETA1R, 4, 1, ReadWriteMode, HRTIM_TIMASETA1RBase> ;
    using CMP1 = HRTIM_TIMA_SETA1R_CMP1_Values<HRTIM_TIMA::SETA1R, 3, 1, ReadWriteMode, HRTIM_TIMASETA1RBase> ;
    using PER = HRTIM_TIMA_SETA1R_PER_Values<HRTIM_TIMA::SETA1R, 2, 1, ReadWriteMode, HRTIM_TIMASETA1RBase> ;
    using RESYNC = HRTIM_TIMA_SETA1R_RESYNC_Values<HRTIM_TIMA::SETA1R, 1, 1, ReadWriteMode, HRTIM_TIMASETA1RBase> ;
    using SST = HRTIM_TIMA_SETA1R_SST_Values<HRTIM_TIMA::SETA1R, 0, 1, ReadWriteMode, HRTIM_TIMASETA1RBase> ;
    using FieldValues = HRTIM_TIMA_SETA1R_SST_Values<HRTIM_TIMA::SETA1R, 0, 0, NoAccess, NoAccess> ;
  } ;

  template<typename... T> 
  using SETA1RPack  = Register<0x400174BC, 32, ReadWriteMode, HRTIM_TIMASETA1RBase, T...> ;

  struct HRTIM_TIMARSTA1RBase {} ;

  struct RSTA1R : public RegisterBase<0x400174C0, 32, ReadWriteMode>
  {
    using UPDATE = HRTIM_TIMA_RSTA1R_UPDATE_Values<HRTIM_TIMA::RSTA1R, 31, 1, ReadWriteMode, HRTIM_TIMARSTA1RBase> ;
    using EXTEVNT10 = HRTIM_TIMA_RSTA1R_EXTEVNT10_Values<HRTIM_TIMA::RSTA1R, 30, 1, ReadWriteMode, HRTIM_TIMARSTA1RBase> ;
    using EXTEVNT9 = HRTIM_TIMA_RSTA1R_EXTEVNT9_Values<HRTIM_TIMA::RSTA1R, 29, 1, ReadWriteMode, HRTIM_TIMARSTA1RBase> ;
    using EXTEVNT8 = HRTIM_TIMA_RSTA1R_EXTEVNT8_Values<HRTIM_TIMA::RSTA1R, 28, 1, ReadWriteMode, HRTIM_TIMARSTA1RBase> ;
    using EXTEVNT7 = HRTIM_TIMA_RSTA1R_EXTEVNT7_Values<HRTIM_TIMA::RSTA1R, 27, 1, ReadWriteMode, HRTIM_TIMARSTA1RBase> ;
    using EXTEVNT6 = HRTIM_TIMA_RSTA1R_EXTEVNT6_Values<HRTIM_TIMA::RSTA1R, 26, 1, ReadWriteMode, HRTIM_TIMARSTA1RBase> ;
    using EXTEVNT5 = HRTIM_TIMA_RSTA1R_EXTEVNT5_Values<HRTIM_TIMA::RSTA1R, 25, 1, ReadWriteMode, HRTIM_TIMARSTA1RBase> ;
    using EXTEVNT4 = HRTIM_TIMA_RSTA1R_EXTEVNT4_Values<HRTIM_TIMA::RSTA1R, 24, 1, ReadWriteMode, HRTIM_TIMARSTA1RBase> ;
    using EXTEVNT3 = HRTIM_TIMA_RSTA1R_EXTEVNT3_Values<HRTIM_TIMA::RSTA1R, 23, 1, ReadWriteMode, HRTIM_TIMARSTA1RBase> ;
    using EXTEVNT2 = HRTIM_TIMA_RSTA1R_EXTEVNT2_Values<HRTIM_TIMA::RSTA1R, 22, 1, ReadWriteMode, HRTIM_TIMARSTA1RBase> ;
    using EXTEVNT1 = HRTIM_TIMA_RSTA1R_EXTEVNT1_Values<HRTIM_TIMA::RSTA1R, 21, 1, ReadWriteMode, HRTIM_TIMARSTA1RBase> ;
    using TIMEVNT9 = HRTIM_TIMA_RSTA1R_TIMEVNT9_Values<HRTIM_TIMA::RSTA1R, 20, 1, ReadWriteMode, HRTIM_TIMARSTA1RBase> ;
    using TIMEVNT8 = HRTIM_TIMA_RSTA1R_TIMEVNT8_Values<HRTIM_TIMA::RSTA1R, 19, 1, ReadWriteMode, HRTIM_TIMARSTA1RBase> ;
    using TIMEVNT7 = HRTIM_TIMA_RSTA1R_TIMEVNT7_Values<HRTIM_TIMA::RSTA1R, 18, 1, ReadWriteMode, HRTIM_TIMARSTA1RBase> ;
    using TIMEVNT6 = HRTIM_TIMA_RSTA1R_TIMEVNT6_Values<HRTIM_TIMA::RSTA1R, 17, 1, ReadWriteMode, HRTIM_TIMARSTA1RBase> ;
    using TIMEVNT5 = HRTIM_TIMA_RSTA1R_TIMEVNT5_Values<HRTIM_TIMA::RSTA1R, 16, 1, ReadWriteMode, HRTIM_TIMARSTA1RBase> ;
    using TIMEVNT4 = HRTIM_TIMA_RSTA1R_TIMEVNT4_Values<HRTIM_TIMA::RSTA1R, 15, 1, ReadWriteMode, HRTIM_TIMARSTA1RBase> ;
    using TIMEVNT3 = HRTIM_TIMA_RSTA1R_TIMEVNT3_Values<HRTIM_TIMA::RSTA1R, 14, 1, ReadWriteMode, HRTIM_TIMARSTA1RBase> ;
    using TIMEVNT2 = HRTIM_TIMA_RSTA1R_TIMEVNT2_Values<HRTIM_TIMA::RSTA1R, 13, 1, ReadWriteMode, HRTIM_TIMARSTA1RBase> ;
    using TIMEVNT1 = HRTIM_TIMA_RSTA1R_TIMEVNT1_Values<HRTIM_TIMA::RSTA1R, 12, 1, ReadWriteMode, HRTIM_TIMARSTA1RBase> ;
    using MSTCMP4 = HRTIM_TIMA_RSTA1R_MSTCMP4_Values<HRTIM_TIMA::RSTA1R, 11, 1, ReadWriteMode, HRTIM_TIMARSTA1RBase> ;
    using MSTCMP3 = HRTIM_TIMA_RSTA1R_MSTCMP3_Values<HRTIM_TIMA::RSTA1R, 10, 1, ReadWriteMode, HRTIM_TIMARSTA1RBase> ;
    using MSTCMP2 = HRTIM_TIMA_RSTA1R_MSTCMP2_Values<HRTIM_TIMA::RSTA1R, 9, 1, ReadWriteMode, HRTIM_TIMARSTA1RBase> ;
    using MSTCMP1 = HRTIM_TIMA_RSTA1R_MSTCMP1_Values<HRTIM_TIMA::RSTA1R, 8, 1, ReadWriteMode, HRTIM_TIMARSTA1RBase> ;
    using MSTPER = HRTIM_TIMA_RSTA1R_MSTPER_Values<HRTIM_TIMA::RSTA1R, 7, 1, ReadWriteMode, HRTIM_TIMARSTA1RBase> ;
    using CMP4 = HRTIM_TIMA_RSTA1R_CMP4_Values<HRTIM_TIMA::RSTA1R, 6, 1, ReadWriteMode, HRTIM_TIMARSTA1RBase> ;
    using CMP3 = HRTIM_TIMA_RSTA1R_CMP3_Values<HRTIM_TIMA::RSTA1R, 5, 1, ReadWriteMode, HRTIM_TIMARSTA1RBase> ;
    using CMP2 = HRTIM_TIMA_RSTA1R_CMP2_Values<HRTIM_TIMA::RSTA1R, 4, 1, ReadWriteMode, HRTIM_TIMARSTA1RBase> ;
    using CMP1 = HRTIM_TIMA_RSTA1R_CMP1_Values<HRTIM_TIMA::RSTA1R, 3, 1, ReadWriteMode, HRTIM_TIMARSTA1RBase> ;
    using PER = HRTIM_TIMA_RSTA1R_PER_Values<HRTIM_TIMA::RSTA1R, 2, 1, ReadWriteMode, HRTIM_TIMARSTA1RBase> ;
    using RESYNC = HRTIM_TIMA_RSTA1R_RESYNC_Values<HRTIM_TIMA::RSTA1R, 1, 1, ReadWriteMode, HRTIM_TIMARSTA1RBase> ;
    using SRT = HRTIM_TIMA_RSTA1R_SRT_Values<HRTIM_TIMA::RSTA1R, 0, 1, ReadWriteMode, HRTIM_TIMARSTA1RBase> ;
    using FieldValues = HRTIM_TIMA_RSTA1R_SRT_Values<HRTIM_TIMA::RSTA1R, 0, 0, NoAccess, NoAccess> ;
  } ;

  template<typename... T> 
  using RSTA1RPack  = Register<0x400174C0, 32, ReadWriteMode, HRTIM_TIMARSTA1RBase, T...> ;

  struct HRTIM_TIMASETA2RBase {} ;

  struct SETA2R : public RegisterBase<0x400174C4, 32, ReadWriteMode>
  {
    using UPDATE = HRTIM_TIMA_SETA2R_UPDATE_Values<HRTIM_TIMA::SETA2R, 31, 1, ReadWriteMode, HRTIM_TIMASETA2RBase> ;
    using EXTEVNT10 = HRTIM_TIMA_SETA2R_EXTEVNT10_Values<HRTIM_TIMA::SETA2R, 30, 1, ReadWriteMode, HRTIM_TIMASETA2RBase> ;
    using EXTEVNT9 = HRTIM_TIMA_SETA2R_EXTEVNT9_Values<HRTIM_TIMA::SETA2R, 29, 1, ReadWriteMode, HRTIM_TIMASETA2RBase> ;
    using EXTEVNT8 = HRTIM_TIMA_SETA2R_EXTEVNT8_Values<HRTIM_TIMA::SETA2R, 28, 1, ReadWriteMode, HRTIM_TIMASETA2RBase> ;
    using EXTEVNT7 = HRTIM_TIMA_SETA2R_EXTEVNT7_Values<HRTIM_TIMA::SETA2R, 27, 1, ReadWriteMode, HRTIM_TIMASETA2RBase> ;
    using EXTEVNT6 = HRTIM_TIMA_SETA2R_EXTEVNT6_Values<HRTIM_TIMA::SETA2R, 26, 1, ReadWriteMode, HRTIM_TIMASETA2RBase> ;
    using EXTEVNT5 = HRTIM_TIMA_SETA2R_EXTEVNT5_Values<HRTIM_TIMA::SETA2R, 25, 1, ReadWriteMode, HRTIM_TIMASETA2RBase> ;
    using EXTEVNT4 = HRTIM_TIMA_SETA2R_EXTEVNT4_Values<HRTIM_TIMA::SETA2R, 24, 1, ReadWriteMode, HRTIM_TIMASETA2RBase> ;
    using EXTEVNT3 = HRTIM_TIMA_SETA2R_EXTEVNT3_Values<HRTIM_TIMA::SETA2R, 23, 1, ReadWriteMode, HRTIM_TIMASETA2RBase> ;
    using EXTEVNT2 = HRTIM_TIMA_SETA2R_EXTEVNT2_Values<HRTIM_TIMA::SETA2R, 22, 1, ReadWriteMode, HRTIM_TIMASETA2RBase> ;
    using EXTEVNT1 = HRTIM_TIMA_SETA2R_EXTEVNT1_Values<HRTIM_TIMA::SETA2R, 21, 1, ReadWriteMode, HRTIM_TIMASETA2RBase> ;
    using TIMEVNT9 = HRTIM_TIMA_SETA2R_TIMEVNT9_Values<HRTIM_TIMA::SETA2R, 20, 1, ReadWriteMode, HRTIM_TIMASETA2RBase> ;
    using TIMEVNT8 = HRTIM_TIMA_SETA2R_TIMEVNT8_Values<HRTIM_TIMA::SETA2R, 19, 1, ReadWriteMode, HRTIM_TIMASETA2RBase> ;
    using TIMEVNT7 = HRTIM_TIMA_SETA2R_TIMEVNT7_Values<HRTIM_TIMA::SETA2R, 18, 1, ReadWriteMode, HRTIM_TIMASETA2RBase> ;
    using TIMEVNT6 = HRTIM_TIMA_SETA2R_TIMEVNT6_Values<HRTIM_TIMA::SETA2R, 17, 1, ReadWriteMode, HRTIM_TIMASETA2RBase> ;
    using TIMEVNT5 = HRTIM_TIMA_SETA2R_TIMEVNT5_Values<HRTIM_TIMA::SETA2R, 16, 1, ReadWriteMode, HRTIM_TIMASETA2RBase> ;
    using TIMEVNT4 = HRTIM_TIMA_SETA2R_TIMEVNT4_Values<HRTIM_TIMA::SETA2R, 15, 1, ReadWriteMode, HRTIM_TIMASETA2RBase> ;
    using TIMEVNT3 = HRTIM_TIMA_SETA2R_TIMEVNT3_Values<HRTIM_TIMA::SETA2R, 14, 1, ReadWriteMode, HRTIM_TIMASETA2RBase> ;
    using TIMEVNT2 = HRTIM_TIMA_SETA2R_TIMEVNT2_Values<HRTIM_TIMA::SETA2R, 13, 1, ReadWriteMode, HRTIM_TIMASETA2RBase> ;
    using TIMEVNT1 = HRTIM_TIMA_SETA2R_TIMEVNT1_Values<HRTIM_TIMA::SETA2R, 12, 1, ReadWriteMode, HRTIM_TIMASETA2RBase> ;
    using MSTCMP4 = HRTIM_TIMA_SETA2R_MSTCMP4_Values<HRTIM_TIMA::SETA2R, 11, 1, ReadWriteMode, HRTIM_TIMASETA2RBase> ;
    using MSTCMP3 = HRTIM_TIMA_SETA2R_MSTCMP3_Values<HRTIM_TIMA::SETA2R, 10, 1, ReadWriteMode, HRTIM_TIMASETA2RBase> ;
    using MSTCMP2 = HRTIM_TIMA_SETA2R_MSTCMP2_Values<HRTIM_TIMA::SETA2R, 9, 1, ReadWriteMode, HRTIM_TIMASETA2RBase> ;
    using MSTCMP1 = HRTIM_TIMA_SETA2R_MSTCMP1_Values<HRTIM_TIMA::SETA2R, 8, 1, ReadWriteMode, HRTIM_TIMASETA2RBase> ;
    using MSTPER = HRTIM_TIMA_SETA2R_MSTPER_Values<HRTIM_TIMA::SETA2R, 7, 1, ReadWriteMode, HRTIM_TIMASETA2RBase> ;
    using CMP4 = HRTIM_TIMA_SETA2R_CMP4_Values<HRTIM_TIMA::SETA2R, 6, 1, ReadWriteMode, HRTIM_TIMASETA2RBase> ;
    using CMP3 = HRTIM_TIMA_SETA2R_CMP3_Values<HRTIM_TIMA::SETA2R, 5, 1, ReadWriteMode, HRTIM_TIMASETA2RBase> ;
    using CMP2 = HRTIM_TIMA_SETA2R_CMP2_Values<HRTIM_TIMA::SETA2R, 4, 1, ReadWriteMode, HRTIM_TIMASETA2RBase> ;
    using CMP1 = HRTIM_TIMA_SETA2R_CMP1_Values<HRTIM_TIMA::SETA2R, 3, 1, ReadWriteMode, HRTIM_TIMASETA2RBase> ;
    using PER = HRTIM_TIMA_SETA2R_PER_Values<HRTIM_TIMA::SETA2R, 2, 1, ReadWriteMode, HRTIM_TIMASETA2RBase> ;
    using RESYNC = HRTIM_TIMA_SETA2R_RESYNC_Values<HRTIM_TIMA::SETA2R, 1, 1, ReadWriteMode, HRTIM_TIMASETA2RBase> ;
    using SST = HRTIM_TIMA_SETA2R_SST_Values<HRTIM_TIMA::SETA2R, 0, 1, ReadWriteMode, HRTIM_TIMASETA2RBase> ;
    using FieldValues = HRTIM_TIMA_SETA2R_SST_Values<HRTIM_TIMA::SETA2R, 0, 0, NoAccess, NoAccess> ;
  } ;

  template<typename... T> 
  using SETA2RPack  = Register<0x400174C4, 32, ReadWriteMode, HRTIM_TIMASETA2RBase, T...> ;

  struct HRTIM_TIMARSTA2RBase {} ;

  struct RSTA2R : public RegisterBase<0x400174C8, 32, ReadWriteMode>
  {
    using UPDATE = HRTIM_TIMA_RSTA2R_UPDATE_Values<HRTIM_TIMA::RSTA2R, 31, 1, ReadWriteMode, HRTIM_TIMARSTA2RBase> ;
    using EXTEVNT10 = HRTIM_TIMA_RSTA2R_EXTEVNT10_Values<HRTIM_TIMA::RSTA2R, 30, 1, ReadWriteMode, HRTIM_TIMARSTA2RBase> ;
    using EXTEVNT9 = HRTIM_TIMA_RSTA2R_EXTEVNT9_Values<HRTIM_TIMA::RSTA2R, 29, 1, ReadWriteMode, HRTIM_TIMARSTA2RBase> ;
    using EXTEVNT8 = HRTIM_TIMA_RSTA2R_EXTEVNT8_Values<HRTIM_TIMA::RSTA2R, 28, 1, ReadWriteMode, HRTIM_TIMARSTA2RBase> ;
    using EXTEVNT7 = HRTIM_TIMA_RSTA2R_EXTEVNT7_Values<HRTIM_TIMA::RSTA2R, 27, 1, ReadWriteMode, HRTIM_TIMARSTA2RBase> ;
    using EXTEVNT6 = HRTIM_TIMA_RSTA2R_EXTEVNT6_Values<HRTIM_TIMA::RSTA2R, 26, 1, ReadWriteMode, HRTIM_TIMARSTA2RBase> ;
    using EXTEVNT5 = HRTIM_TIMA_RSTA2R_EXTEVNT5_Values<HRTIM_TIMA::RSTA2R, 25, 1, ReadWriteMode, HRTIM_TIMARSTA2RBase> ;
    using EXTEVNT4 = HRTIM_TIMA_RSTA2R_EXTEVNT4_Values<HRTIM_TIMA::RSTA2R, 24, 1, ReadWriteMode, HRTIM_TIMARSTA2RBase> ;
    using EXTEVNT3 = HRTIM_TIMA_RSTA2R_EXTEVNT3_Values<HRTIM_TIMA::RSTA2R, 23, 1, ReadWriteMode, HRTIM_TIMARSTA2RBase> ;
    using EXTEVNT2 = HRTIM_TIMA_RSTA2R_EXTEVNT2_Values<HRTIM_TIMA::RSTA2R, 22, 1, ReadWriteMode, HRTIM_TIMARSTA2RBase> ;
    using EXTEVNT1 = HRTIM_TIMA_RSTA2R_EXTEVNT1_Values<HRTIM_TIMA::RSTA2R, 21, 1, ReadWriteMode, HRTIM_TIMARSTA2RBase> ;
    using TIMEVNT9 = HRTIM_TIMA_RSTA2R_TIMEVNT9_Values<HRTIM_TIMA::RSTA2R, 20, 1, ReadWriteMode, HRTIM_TIMARSTA2RBase> ;
    using TIMEVNT8 = HRTIM_TIMA_RSTA2R_TIMEVNT8_Values<HRTIM_TIMA::RSTA2R, 19, 1, ReadWriteMode, HRTIM_TIMARSTA2RBase> ;
    using TIMEVNT7 = HRTIM_TIMA_RSTA2R_TIMEVNT7_Values<HRTIM_TIMA::RSTA2R, 18, 1, ReadWriteMode, HRTIM_TIMARSTA2RBase> ;
    using TIMEVNT6 = HRTIM_TIMA_RSTA2R_TIMEVNT6_Values<HRTIM_TIMA::RSTA2R, 17, 1, ReadWriteMode, HRTIM_TIMARSTA2RBase> ;
    using TIMEVNT5 = HRTIM_TIMA_RSTA2R_TIMEVNT5_Values<HRTIM_TIMA::RSTA2R, 16, 1, ReadWriteMode, HRTIM_TIMARSTA2RBase> ;
    using TIMEVNT4 = HRTIM_TIMA_RSTA2R_TIMEVNT4_Values<HRTIM_TIMA::RSTA2R, 15, 1, ReadWriteMode, HRTIM_TIMARSTA2RBase> ;
    using TIMEVNT3 = HRTIM_TIMA_RSTA2R_TIMEVNT3_Values<HRTIM_TIMA::RSTA2R, 14, 1, ReadWriteMode, HRTIM_TIMARSTA2RBase> ;
    using TIMEVNT2 = HRTIM_TIMA_RSTA2R_TIMEVNT2_Values<HRTIM_TIMA::RSTA2R, 13, 1, ReadWriteMode, HRTIM_TIMARSTA2RBase> ;
    using TIMEVNT1 = HRTIM_TIMA_RSTA2R_TIMEVNT1_Values<HRTIM_TIMA::RSTA2R, 12, 1, ReadWriteMode, HRTIM_TIMARSTA2RBase> ;
    using MSTCMP4 = HRTIM_TIMA_RSTA2R_MSTCMP4_Values<HRTIM_TIMA::RSTA2R, 11, 1, ReadWriteMode, HRTIM_TIMARSTA2RBase> ;
    using MSTCMP3 = HRTIM_TIMA_RSTA2R_MSTCMP3_Values<HRTIM_TIMA::RSTA2R, 10, 1, ReadWriteMode, HRTIM_TIMARSTA2RBase> ;
    using MSTCMP2 = HRTIM_TIMA_RSTA2R_MSTCMP2_Values<HRTIM_TIMA::RSTA2R, 9, 1, ReadWriteMode, HRTIM_TIMARSTA2RBase> ;
    using MSTCMP1 = HRTIM_TIMA_RSTA2R_MSTCMP1_Values<HRTIM_TIMA::RSTA2R, 8, 1, ReadWriteMode, HRTIM_TIMARSTA2RBase> ;
    using MSTPER = HRTIM_TIMA_RSTA2R_MSTPER_Values<HRTIM_TIMA::RSTA2R, 7, 1, ReadWriteMode, HRTIM_TIMARSTA2RBase> ;
    using CMP4 = HRTIM_TIMA_RSTA2R_CMP4_Values<HRTIM_TIMA::RSTA2R, 6, 1, ReadWriteMode, HRTIM_TIMARSTA2RBase> ;
    using CMP3 = HRTIM_TIMA_RSTA2R_CMP3_Values<HRTIM_TIMA::RSTA2R, 5, 1, ReadWriteMode, HRTIM_TIMARSTA2RBase> ;
    using CMP2 = HRTIM_TIMA_RSTA2R_CMP2_Values<HRTIM_TIMA::RSTA2R, 4, 1, ReadWriteMode, HRTIM_TIMARSTA2RBase> ;
    using CMP1 = HRTIM_TIMA_RSTA2R_CMP1_Values<HRTIM_TIMA::RSTA2R, 3, 1, ReadWriteMode, HRTIM_TIMARSTA2RBase> ;
    using PER = HRTIM_TIMA_RSTA2R_PER_Values<HRTIM_TIMA::RSTA2R, 2, 1, ReadWriteMode, HRTIM_TIMARSTA2RBase> ;
    using RESYNC = HRTIM_TIMA_RSTA2R_RESYNC_Values<HRTIM_TIMA::RSTA2R, 1, 1, ReadWriteMode, HRTIM_TIMARSTA2RBase> ;
    using SRT = HRTIM_TIMA_RSTA2R_SRT_Values<HRTIM_TIMA::RSTA2R, 0, 1, ReadWriteMode, HRTIM_TIMARSTA2RBase> ;
    using FieldValues = HRTIM_TIMA_RSTA2R_SRT_Values<HRTIM_TIMA::RSTA2R, 0, 0, NoAccess, NoAccess> ;
  } ;

  template<typename... T> 
  using RSTA2RPack  = Register<0x400174C8, 32, ReadWriteMode, HRTIM_TIMARSTA2RBase, T...> ;

  struct HRTIM_TIMAEEFAR1Base {} ;

  struct EEFAR1 : public RegisterBase<0x400174CC, 32, ReadWriteMode>
  {
    using EE5FLTR = HRTIM_TIMA_EEFAR1_EE5FLTR_Values<HRTIM_TIMA::EEFAR1, 25, 4, ReadWriteMode, HRTIM_TIMAEEFAR1Base> ;
    using EE5LTCH = HRTIM_TIMA_EEFAR1_EE5LTCH_Values<HRTIM_TIMA::EEFAR1, 24, 1, ReadWriteMode, HRTIM_TIMAEEFAR1Base> ;
    using EE4FLTR = HRTIM_TIMA_EEFAR1_EE4FLTR_Values<HRTIM_TIMA::EEFAR1, 19, 4, ReadWriteMode, HRTIM_TIMAEEFAR1Base> ;
    using EE4LTCH = HRTIM_TIMA_EEFAR1_EE4LTCH_Values<HRTIM_TIMA::EEFAR1, 18, 1, ReadWriteMode, HRTIM_TIMAEEFAR1Base> ;
    using EE3FLTR = HRTIM_TIMA_EEFAR1_EE3FLTR_Values<HRTIM_TIMA::EEFAR1, 13, 4, ReadWriteMode, HRTIM_TIMAEEFAR1Base> ;
    using EE3LTCH = HRTIM_TIMA_EEFAR1_EE3LTCH_Values<HRTIM_TIMA::EEFAR1, 12, 1, ReadWriteMode, HRTIM_TIMAEEFAR1Base> ;
    using EE2FLTR = HRTIM_TIMA_EEFAR1_EE2FLTR_Values<HRTIM_TIMA::EEFAR1, 7, 4, ReadWriteMode, HRTIM_TIMAEEFAR1Base> ;
    using EE2LTCH = HRTIM_TIMA_EEFAR1_EE2LTCH_Values<HRTIM_TIMA::EEFAR1, 6, 1, ReadWriteMode, HRTIM_TIMAEEFAR1Base> ;
    using EE1FLTR = HRTIM_TIMA_EEFAR1_EE1FLTR_Values<HRTIM_TIMA::EEFAR1, 1, 4, ReadWriteMode, HRTIM_TIMAEEFAR1Base> ;
    using EE1LTCH = HRTIM_TIMA_EEFAR1_EE1LTCH_Values<HRTIM_TIMA::EEFAR1, 0, 1, ReadWriteMode, HRTIM_TIMAEEFAR1Base> ;
    using FieldValues = HRTIM_TIMA_EEFAR1_EE1LTCH_Values<HRTIM_TIMA::EEFAR1, 0, 0, NoAccess, NoAccess> ;
  } ;

  template<typename... T> 
  using EEFAR1Pack  = Register<0x400174CC, 32, ReadWriteMode, HRTIM_TIMAEEFAR1Base, T...> ;

  struct HRTIM_TIMAEEFAR2Base {} ;

  struct EEFAR2 : public RegisterBase<0x400174D0, 32, ReadWriteMode>
  {
    using EE10FLTR = HRTIM_TIMA_EEFAR2_EE10FLTR_Values<HRTIM_TIMA::EEFAR2, 25, 4, ReadWriteMode, HRTIM_TIMAEEFAR2Base> ;
    using EE10LTCH = HRTIM_TIMA_EEFAR2_EE10LTCH_Values<HRTIM_TIMA::EEFAR2, 24, 1, ReadWriteMode, HRTIM_TIMAEEFAR2Base> ;
    using EE9FLTR = HRTIM_TIMA_EEFAR2_EE9FLTR_Values<HRTIM_TIMA::EEFAR2, 19, 4, ReadWriteMode, HRTIM_TIMAEEFAR2Base> ;
    using EE9LTCH = HRTIM_TIMA_EEFAR2_EE9LTCH_Values<HRTIM_TIMA::EEFAR2, 18, 1, ReadWriteMode, HRTIM_TIMAEEFAR2Base> ;
    using EE8FLTR = HRTIM_TIMA_EEFAR2_EE8FLTR_Values<HRTIM_TIMA::EEFAR2, 13, 4, ReadWriteMode, HRTIM_TIMAEEFAR2Base> ;
    using EE8LTCH = HRTIM_TIMA_EEFAR2_EE8LTCH_Values<HRTIM_TIMA::EEFAR2, 12, 1, ReadWriteMode, HRTIM_TIMAEEFAR2Base> ;
    using EE7FLTR = HRTIM_TIMA_EEFAR2_EE7FLTR_Values<HRTIM_TIMA::EEFAR2, 7, 4, ReadWriteMode, HRTIM_TIMAEEFAR2Base> ;
    using EE7LTCH = HRTIM_TIMA_EEFAR2_EE7LTCH_Values<HRTIM_TIMA::EEFAR2, 6, 1, ReadWriteMode, HRTIM_TIMAEEFAR2Base> ;
    using EE6FLTR = HRTIM_TIMA_EEFAR2_EE6FLTR_Values<HRTIM_TIMA::EEFAR2, 1, 4, ReadWriteMode, HRTIM_TIMAEEFAR2Base> ;
    using EE6LTCH = HRTIM_TIMA_EEFAR2_EE6LTCH_Values<HRTIM_TIMA::EEFAR2, 0, 1, ReadWriteMode, HRTIM_TIMAEEFAR2Base> ;
    using FieldValues = HRTIM_TIMA_EEFAR2_EE6LTCH_Values<HRTIM_TIMA::EEFAR2, 0, 0, NoAccess, NoAccess> ;
  } ;

  template<typename... T> 
  using EEFAR2Pack  = Register<0x400174D0, 32, ReadWriteMode, HRTIM_TIMAEEFAR2Base, T...> ;

  struct HRTIM_TIMARSTARBase {} ;

  struct RSTAR : public RegisterBase<0x400174D4, 32, ReadWriteMode>
  {
    using TIMECMP4 = HRTIM_TIMA_RSTAR_TIMECMP4_Values<HRTIM_TIMA::RSTAR, 30, 1, ReadWriteMode, HRTIM_TIMARSTARBase> ;
    using TIMECMP2 = HRTIM_TIMA_RSTAR_TIMECMP2_Values<HRTIM_TIMA::RSTAR, 29, 1, ReadWriteMode, HRTIM_TIMARSTARBase> ;
    using TIMECMP1 = HRTIM_TIMA_RSTAR_TIMECMP1_Values<HRTIM_TIMA::RSTAR, 28, 1, ReadWriteMode, HRTIM_TIMARSTARBase> ;
    using TIMDCMP4 = HRTIM_TIMA_RSTAR_TIMDCMP4_Values<HRTIM_TIMA::RSTAR, 27, 1, ReadWriteMode, HRTIM_TIMARSTARBase> ;
    using TIMDCMP2 = HRTIM_TIMA_RSTAR_TIMDCMP2_Values<HRTIM_TIMA::RSTAR, 26, 1, ReadWriteMode, HRTIM_TIMARSTARBase> ;
    using TIMDCMP1 = HRTIM_TIMA_RSTAR_TIMDCMP1_Values<HRTIM_TIMA::RSTAR, 25, 1, ReadWriteMode, HRTIM_TIMARSTARBase> ;
    using TIMCCMP4 = HRTIM_TIMA_RSTAR_TIMCCMP4_Values<HRTIM_TIMA::RSTAR, 24, 1, ReadWriteMode, HRTIM_TIMARSTARBase> ;
    using TIMCCMP2 = HRTIM_TIMA_RSTAR_TIMCCMP2_Values<HRTIM_TIMA::RSTAR, 23, 1, ReadWriteMode, HRTIM_TIMARSTARBase> ;
    using TIMCCMP1 = HRTIM_TIMA_RSTAR_TIMCCMP1_Values<HRTIM_TIMA::RSTAR, 22, 1, ReadWriteMode, HRTIM_TIMARSTARBase> ;
    using TIMBCMP4 = HRTIM_TIMA_RSTAR_TIMBCMP4_Values<HRTIM_TIMA::RSTAR, 21, 1, ReadWriteMode, HRTIM_TIMARSTARBase> ;
    using TIMBCMP2 = HRTIM_TIMA_RSTAR_TIMBCMP2_Values<HRTIM_TIMA::RSTAR, 20, 1, ReadWriteMode, HRTIM_TIMARSTARBase> ;
    using TIMBCMP1 = HRTIM_TIMA_RSTAR_TIMBCMP1_Values<HRTIM_TIMA::RSTAR, 19, 1, ReadWriteMode, HRTIM_TIMARSTARBase> ;
    using EXTEVNT10 = HRTIM_TIMA_RSTAR_EXTEVNT10_Values<HRTIM_TIMA::RSTAR, 18, 1, ReadWriteMode, HRTIM_TIMARSTARBase> ;
    using EXTEVNT9 = HRTIM_TIMA_RSTAR_EXTEVNT9_Values<HRTIM_TIMA::RSTAR, 17, 1, ReadWriteMode, HRTIM_TIMARSTARBase> ;
    using EXTEVNT8 = HRTIM_TIMA_RSTAR_EXTEVNT8_Values<HRTIM_TIMA::RSTAR, 16, 1, ReadWriteMode, HRTIM_TIMARSTARBase> ;
    using EXTEVNT7 = HRTIM_TIMA_RSTAR_EXTEVNT7_Values<HRTIM_TIMA::RSTAR, 15, 1, ReadWriteMode, HRTIM_TIMARSTARBase> ;
    using EXTEVNT6 = HRTIM_TIMA_RSTAR_EXTEVNT6_Values<HRTIM_TIMA::RSTAR, 14, 1, ReadWriteMode, HRTIM_TIMARSTARBase> ;
    using EXTEVNT5 = HRTIM_TIMA_RSTAR_EXTEVNT5_Values<HRTIM_TIMA::RSTAR, 13, 1, ReadWriteMode, HRTIM_TIMARSTARBase> ;
    using EXTEVNT4 = HRTIM_TIMA_RSTAR_EXTEVNT4_Values<HRTIM_TIMA::RSTAR, 12, 1, ReadWriteMode, HRTIM_TIMARSTARBase> ;
    using EXTEVNT3 = HRTIM_TIMA_RSTAR_EXTEVNT3_Values<HRTIM_TIMA::RSTAR, 11, 1, ReadWriteMode, HRTIM_TIMARSTARBase> ;
    using EXTEVNT2 = HRTIM_TIMA_RSTAR_EXTEVNT2_Values<HRTIM_TIMA::RSTAR, 10, 1, ReadWriteMode, HRTIM_TIMARSTARBase> ;
    using EXTEVNT1 = HRTIM_TIMA_RSTAR_EXTEVNT1_Values<HRTIM_TIMA::RSTAR, 9, 1, ReadWriteMode, HRTIM_TIMARSTARBase> ;
    using MSTCMP4 = HRTIM_TIMA_RSTAR_MSTCMP4_Values<HRTIM_TIMA::RSTAR, 8, 1, ReadWriteMode, HRTIM_TIMARSTARBase> ;
    using MSTCMP3 = HRTIM_TIMA_RSTAR_MSTCMP3_Values<HRTIM_TIMA::RSTAR, 7, 1, ReadWriteMode, HRTIM_TIMARSTARBase> ;
    using MSTCMP2 = HRTIM_TIMA_RSTAR_MSTCMP2_Values<HRTIM_TIMA::RSTAR, 6, 1, ReadWriteMode, HRTIM_TIMARSTARBase> ;
    using MSTCMP1 = HRTIM_TIMA_RSTAR_MSTCMP1_Values<HRTIM_TIMA::RSTAR, 5, 1, ReadWriteMode, HRTIM_TIMARSTARBase> ;
    using MSTPER = HRTIM_TIMA_RSTAR_MSTPER_Values<HRTIM_TIMA::RSTAR, 4, 1, ReadWriteMode, HRTIM_TIMARSTARBase> ;
    using CMP4 = HRTIM_TIMA_RSTAR_CMP4_Values<HRTIM_TIMA::RSTAR, 3, 1, ReadWriteMode, HRTIM_TIMARSTARBase> ;
    using CMP2 = HRTIM_TIMA_RSTAR_CMP2_Values<HRTIM_TIMA::RSTAR, 2, 1, ReadWriteMode, HRTIM_TIMARSTARBase> ;
    using UPDT = HRTIM_TIMA_RSTAR_UPDT_Values<HRTIM_TIMA::RSTAR, 1, 1, ReadWriteMode, HRTIM_TIMARSTARBase> ;
    using FieldValues = HRTIM_TIMA_RSTAR_UPDT_Values<HRTIM_TIMA::RSTAR, 0, 0, NoAccess, NoAccess> ;
  } ;

  template<typename... T> 
  using RSTARPack  = Register<0x400174D4, 32, ReadWriteMode, HRTIM_TIMARSTARBase, T...> ;

  struct HRTIM_TIMACHPARBase {} ;

  struct CHPAR : public RegisterBase<0x400174D8, 32, ReadWriteMode>
  {
    using STRTPW = HRTIM_TIMA_CHPAR_STRTPW_Values<HRTIM_TIMA::CHPAR, 7, 4, ReadWriteMode, HRTIM_TIMACHPARBase> ;
    using CHPDTY = HRTIM_TIMA_CHPAR_CHPDTY_Values<HRTIM_TIMA::CHPAR, 4, 3, ReadWriteMode, HRTIM_TIMACHPARBase> ;
    using CHPFRQ = HRTIM_TIMA_CHPAR_CHPFRQ_Values<HRTIM_TIMA::CHPAR, 0, 4, ReadWriteMode, HRTIM_TIMACHPARBase> ;
    using FieldValues = HRTIM_TIMA_CHPAR_CHPFRQ_Values<HRTIM_TIMA::CHPAR, 0, 0, NoAccess, NoAccess> ;
  } ;

  template<typename... T> 
  using CHPARPack  = Register<0x400174D8, 32, ReadWriteMode, HRTIM_TIMACHPARBase, T...> ;

  struct HRTIM_TIMACPT1ACRBase {} ;

  struct CPT1ACR : public RegisterBase<0x400174DC, 32, ReadWriteMode>
  {
    using TECMP2 = HRTIM_TIMA_CPT1ACR_TECMP2_Values<HRTIM_TIMA::CPT1ACR, 31, 1, ReadWriteMode, HRTIM_TIMACPT1ACRBase> ;
    using TECMP1 = HRTIM_TIMA_CPT1ACR_TECMP1_Values<HRTIM_TIMA::CPT1ACR, 30, 1, ReadWriteMode, HRTIM_TIMACPT1ACRBase> ;
    using TE1RST = HRTIM_TIMA_CPT1ACR_TE1RST_Values<HRTIM_TIMA::CPT1ACR, 29, 1, ReadWriteMode, HRTIM_TIMACPT1ACRBase> ;
    using TE1SET = HRTIM_TIMA_CPT1ACR_TE1SET_Values<HRTIM_TIMA::CPT1ACR, 28, 1, ReadWriteMode, HRTIM_TIMACPT1ACRBase> ;
    using TDCMP2 = HRTIM_TIMA_CPT1ACR_TDCMP2_Values<HRTIM_TIMA::CPT1ACR, 27, 1, ReadWriteMode, HRTIM_TIMACPT1ACRBase> ;
    using TDCMP1 = HRTIM_TIMA_CPT1ACR_TDCMP1_Values<HRTIM_TIMA::CPT1ACR, 26, 1, ReadWriteMode, HRTIM_TIMACPT1ACRBase> ;
    using TD1RST = HRTIM_TIMA_CPT1ACR_TD1RST_Values<HRTIM_TIMA::CPT1ACR, 25, 1, ReadWriteMode, HRTIM_TIMACPT1ACRBase> ;
    using TD1SET = HRTIM_TIMA_CPT1ACR_TD1SET_Values<HRTIM_TIMA::CPT1ACR, 24, 1, ReadWriteMode, HRTIM_TIMACPT1ACRBase> ;
    using TCCMP2 = HRTIM_TIMA_CPT1ACR_TCCMP2_Values<HRTIM_TIMA::CPT1ACR, 23, 1, ReadWriteMode, HRTIM_TIMACPT1ACRBase> ;
    using TCCMP1 = HRTIM_TIMA_CPT1ACR_TCCMP1_Values<HRTIM_TIMA::CPT1ACR, 22, 1, ReadWriteMode, HRTIM_TIMACPT1ACRBase> ;
    using TC1RST = HRTIM_TIMA_CPT1ACR_TC1RST_Values<HRTIM_TIMA::CPT1ACR, 21, 1, ReadWriteMode, HRTIM_TIMACPT1ACRBase> ;
    using TC1SET = HRTIM_TIMA_CPT1ACR_TC1SET_Values<HRTIM_TIMA::CPT1ACR, 20, 1, ReadWriteMode, HRTIM_TIMACPT1ACRBase> ;
    using TBCMP2 = HRTIM_TIMA_CPT1ACR_TBCMP2_Values<HRTIM_TIMA::CPT1ACR, 19, 1, ReadWriteMode, HRTIM_TIMACPT1ACRBase> ;
    using TBCMP1 = HRTIM_TIMA_CPT1ACR_TBCMP1_Values<HRTIM_TIMA::CPT1ACR, 18, 1, ReadWriteMode, HRTIM_TIMACPT1ACRBase> ;
    using TB1RST = HRTIM_TIMA_CPT1ACR_TB1RST_Values<HRTIM_TIMA::CPT1ACR, 17, 1, ReadWriteMode, HRTIM_TIMACPT1ACRBase> ;
    using TB1SET = HRTIM_TIMA_CPT1ACR_TB1SET_Values<HRTIM_TIMA::CPT1ACR, 16, 1, ReadWriteMode, HRTIM_TIMACPT1ACRBase> ;
    using EXEV10CPT = HRTIM_TIMA_CPT1ACR_EXEV10CPT_Values<HRTIM_TIMA::CPT1ACR, 11, 1, ReadWriteMode, HRTIM_TIMACPT1ACRBase> ;
    using EXEV9CPT = HRTIM_TIMA_CPT1ACR_EXEV9CPT_Values<HRTIM_TIMA::CPT1ACR, 10, 1, ReadWriteMode, HRTIM_TIMACPT1ACRBase> ;
    using EXEV8CPT = HRTIM_TIMA_CPT1ACR_EXEV8CPT_Values<HRTIM_TIMA::CPT1ACR, 9, 1, ReadWriteMode, HRTIM_TIMACPT1ACRBase> ;
    using EXEV7CPT = HRTIM_TIMA_CPT1ACR_EXEV7CPT_Values<HRTIM_TIMA::CPT1ACR, 8, 1, ReadWriteMode, HRTIM_TIMACPT1ACRBase> ;
    using EXEV6CPT = HRTIM_TIMA_CPT1ACR_EXEV6CPT_Values<HRTIM_TIMA::CPT1ACR, 7, 1, ReadWriteMode, HRTIM_TIMACPT1ACRBase> ;
    using EXEV5CPT = HRTIM_TIMA_CPT1ACR_EXEV5CPT_Values<HRTIM_TIMA::CPT1ACR, 6, 1, ReadWriteMode, HRTIM_TIMACPT1ACRBase> ;
    using EXEV4CPT = HRTIM_TIMA_CPT1ACR_EXEV4CPT_Values<HRTIM_TIMA::CPT1ACR, 5, 1, ReadWriteMode, HRTIM_TIMACPT1ACRBase> ;
    using EXEV3CPT = HRTIM_TIMA_CPT1ACR_EXEV3CPT_Values<HRTIM_TIMA::CPT1ACR, 4, 1, ReadWriteMode, HRTIM_TIMACPT1ACRBase> ;
    using EXEV2CPT = HRTIM_TIMA_CPT1ACR_EXEV2CPT_Values<HRTIM_TIMA::CPT1ACR, 3, 1, ReadWriteMode, HRTIM_TIMACPT1ACRBase> ;
    using EXEV1CPT = HRTIM_TIMA_CPT1ACR_EXEV1CPT_Values<HRTIM_TIMA::CPT1ACR, 2, 1, ReadWriteMode, HRTIM_TIMACPT1ACRBase> ;
    using UDPCPT = HRTIM_TIMA_CPT1ACR_UDPCPT_Values<HRTIM_TIMA::CPT1ACR, 1, 1, ReadWriteMode, HRTIM_TIMACPT1ACRBase> ;
    using SWCPT = HRTIM_TIMA_CPT1ACR_SWCPT_Values<HRTIM_TIMA::CPT1ACR, 0, 1, ReadWriteMode, HRTIM_TIMACPT1ACRBase> ;
    using FieldValues = HRTIM_TIMA_CPT1ACR_SWCPT_Values<HRTIM_TIMA::CPT1ACR, 0, 0, NoAccess, NoAccess> ;
  } ;

  template<typename... T> 
  using CPT1ACRPack  = Register<0x400174DC, 32, ReadWriteMode, HRTIM_TIMACPT1ACRBase, T...> ;

  struct HRTIM_TIMACPT2ACRBase {} ;

  struct CPT2ACR : public RegisterBase<0x400174E0, 32, ReadWriteMode>
  {
    using TECMP2 = HRTIM_TIMA_CPT2ACR_TECMP2_Values<HRTIM_TIMA::CPT2ACR, 31, 1, ReadWriteMode, HRTIM_TIMACPT2ACRBase> ;
    using TECMP1 = HRTIM_TIMA_CPT2ACR_TECMP1_Values<HRTIM_TIMA::CPT2ACR, 30, 1, ReadWriteMode, HRTIM_TIMACPT2ACRBase> ;
    using TE1RST = HRTIM_TIMA_CPT2ACR_TE1RST_Values<HRTIM_TIMA::CPT2ACR, 29, 1, ReadWriteMode, HRTIM_TIMACPT2ACRBase> ;
    using TE1SET = HRTIM_TIMA_CPT2ACR_TE1SET_Values<HRTIM_TIMA::CPT2ACR, 28, 1, ReadWriteMode, HRTIM_TIMACPT2ACRBase> ;
    using TDCMP2 = HRTIM_TIMA_CPT2ACR_TDCMP2_Values<HRTIM_TIMA::CPT2ACR, 27, 1, ReadWriteMode, HRTIM_TIMACPT2ACRBase> ;
    using TDCMP1 = HRTIM_TIMA_CPT2ACR_TDCMP1_Values<HRTIM_TIMA::CPT2ACR, 26, 1, ReadWriteMode, HRTIM_TIMACPT2ACRBase> ;
    using TD1RST = HRTIM_TIMA_CPT2ACR_TD1RST_Values<HRTIM_TIMA::CPT2ACR, 25, 1, ReadWriteMode, HRTIM_TIMACPT2ACRBase> ;
    using TD1SET = HRTIM_TIMA_CPT2ACR_TD1SET_Values<HRTIM_TIMA::CPT2ACR, 24, 1, ReadWriteMode, HRTIM_TIMACPT2ACRBase> ;
    using TCCMP2 = HRTIM_TIMA_CPT2ACR_TCCMP2_Values<HRTIM_TIMA::CPT2ACR, 23, 1, ReadWriteMode, HRTIM_TIMACPT2ACRBase> ;
    using TCCMP1 = HRTIM_TIMA_CPT2ACR_TCCMP1_Values<HRTIM_TIMA::CPT2ACR, 22, 1, ReadWriteMode, HRTIM_TIMACPT2ACRBase> ;
    using TC1RST = HRTIM_TIMA_CPT2ACR_TC1RST_Values<HRTIM_TIMA::CPT2ACR, 21, 1, ReadWriteMode, HRTIM_TIMACPT2ACRBase> ;
    using TC1SET = HRTIM_TIMA_CPT2ACR_TC1SET_Values<HRTIM_TIMA::CPT2ACR, 20, 1, ReadWriteMode, HRTIM_TIMACPT2ACRBase> ;
    using TBCMP2 = HRTIM_TIMA_CPT2ACR_TBCMP2_Values<HRTIM_TIMA::CPT2ACR, 19, 1, ReadWriteMode, HRTIM_TIMACPT2ACRBase> ;
    using TBCMP1 = HRTIM_TIMA_CPT2ACR_TBCMP1_Values<HRTIM_TIMA::CPT2ACR, 18, 1, ReadWriteMode, HRTIM_TIMACPT2ACRBase> ;
    using TB1RST = HRTIM_TIMA_CPT2ACR_TB1RST_Values<HRTIM_TIMA::CPT2ACR, 17, 1, ReadWriteMode, HRTIM_TIMACPT2ACRBase> ;
    using TB1SET = HRTIM_TIMA_CPT2ACR_TB1SET_Values<HRTIM_TIMA::CPT2ACR, 16, 1, ReadWriteMode, HRTIM_TIMACPT2ACRBase> ;
    using EXEV10CPT = HRTIM_TIMA_CPT2ACR_EXEV10CPT_Values<HRTIM_TIMA::CPT2ACR, 11, 1, ReadWriteMode, HRTIM_TIMACPT2ACRBase> ;
    using EXEV9CPT = HRTIM_TIMA_CPT2ACR_EXEV9CPT_Values<HRTIM_TIMA::CPT2ACR, 10, 1, ReadWriteMode, HRTIM_TIMACPT2ACRBase> ;
    using EXEV8CPT = HRTIM_TIMA_CPT2ACR_EXEV8CPT_Values<HRTIM_TIMA::CPT2ACR, 9, 1, ReadWriteMode, HRTIM_TIMACPT2ACRBase> ;
    using EXEV7CPT = HRTIM_TIMA_CPT2ACR_EXEV7CPT_Values<HRTIM_TIMA::CPT2ACR, 8, 1, ReadWriteMode, HRTIM_TIMACPT2ACRBase> ;
    using EXEV6CPT = HRTIM_TIMA_CPT2ACR_EXEV6CPT_Values<HRTIM_TIMA::CPT2ACR, 7, 1, ReadWriteMode, HRTIM_TIMACPT2ACRBase> ;
    using EXEV5CPT = HRTIM_TIMA_CPT2ACR_EXEV5CPT_Values<HRTIM_TIMA::CPT2ACR, 6, 1, ReadWriteMode, HRTIM_TIMACPT2ACRBase> ;
    using EXEV4CPT = HRTIM_TIMA_CPT2ACR_EXEV4CPT_Values<HRTIM_TIMA::CPT2ACR, 5, 1, ReadWriteMode, HRTIM_TIMACPT2ACRBase> ;
    using EXEV3CPT = HRTIM_TIMA_CPT2ACR_EXEV3CPT_Values<HRTIM_TIMA::CPT2ACR, 4, 1, ReadWriteMode, HRTIM_TIMACPT2ACRBase> ;
    using EXEV2CPT = HRTIM_TIMA_CPT2ACR_EXEV2CPT_Values<HRTIM_TIMA::CPT2ACR, 3, 1, ReadWriteMode, HRTIM_TIMACPT2ACRBase> ;
    using EXEV1CPT = HRTIM_TIMA_CPT2ACR_EXEV1CPT_Values<HRTIM_TIMA::CPT2ACR, 2, 1, ReadWriteMode, HRTIM_TIMACPT2ACRBase> ;
    using UDPCPT = HRTIM_TIMA_CPT2ACR_UDPCPT_Values<HRTIM_TIMA::CPT2ACR, 1, 1, ReadWriteMode, HRTIM_TIMACPT2ACRBase> ;
    using SWCPT = HRTIM_TIMA_CPT2ACR_SWCPT_Values<HRTIM_TIMA::CPT2ACR, 0, 1, ReadWriteMode, HRTIM_TIMACPT2ACRBase> ;
    using FieldValues = HRTIM_TIMA_CPT2ACR_SWCPT_Values<HRTIM_TIMA::CPT2ACR, 0, 0, NoAccess, NoAccess> ;
  } ;

  template<typename... T> 
  using CPT2ACRPack  = Register<0x400174E0, 32, ReadWriteMode, HRTIM_TIMACPT2ACRBase, T...> ;

  struct HRTIM_TIMAOUTARBase {} ;

  struct OUTAR : public RegisterBase<0x400174E4, 32, ReadWriteMode>
  {
    using DIDL2 = HRTIM_TIMA_OUTAR_DIDL2_Values<HRTIM_TIMA::OUTAR, 23, 1, ReadWriteMode, HRTIM_TIMAOUTARBase> ;
    using CHP2 = HRTIM_TIMA_OUTAR_CHP2_Values<HRTIM_TIMA::OUTAR, 22, 1, ReadWriteMode, HRTIM_TIMAOUTARBase> ;
    using FAULT2 = HRTIM_TIMA_OUTAR_FAULT2_Values<HRTIM_TIMA::OUTAR, 20, 2, ReadWriteMode, HRTIM_TIMAOUTARBase> ;
    using IDLES2 = HRTIM_TIMA_OUTAR_IDLES2_Values<HRTIM_TIMA::OUTAR, 19, 1, ReadWriteMode, HRTIM_TIMAOUTARBase> ;
    using IDLEM2 = HRTIM_TIMA_OUTAR_IDLEM2_Values<HRTIM_TIMA::OUTAR, 18, 1, ReadWriteMode, HRTIM_TIMAOUTARBase> ;
    using POL2 = HRTIM_TIMA_OUTAR_POL2_Values<HRTIM_TIMA::OUTAR, 17, 1, ReadWriteMode, HRTIM_TIMAOUTARBase> ;
    using DLYPRT = HRTIM_TIMA_OUTAR_DLYPRT_Values<HRTIM_TIMA::OUTAR, 10, 3, ReadWriteMode, HRTIM_TIMAOUTARBase> ;
    using DLYPRTEN = HRTIM_TIMA_OUTAR_DLYPRTEN_Values<HRTIM_TIMA::OUTAR, 9, 1, ReadWriteMode, HRTIM_TIMAOUTARBase> ;
    using DTEN = HRTIM_TIMA_OUTAR_DTEN_Values<HRTIM_TIMA::OUTAR, 8, 1, ReadWriteMode, HRTIM_TIMAOUTARBase> ;
    using DIDL1 = HRTIM_TIMA_OUTAR_DIDL1_Values<HRTIM_TIMA::OUTAR, 7, 1, ReadWriteMode, HRTIM_TIMAOUTARBase> ;
    using CHP1 = HRTIM_TIMA_OUTAR_CHP1_Values<HRTIM_TIMA::OUTAR, 6, 1, ReadWriteMode, HRTIM_TIMAOUTARBase> ;
    using FAULT1 = HRTIM_TIMA_OUTAR_FAULT1_Values<HRTIM_TIMA::OUTAR, 4, 2, ReadWriteMode, HRTIM_TIMAOUTARBase> ;
    using IDLES1 = HRTIM_TIMA_OUTAR_IDLES1_Values<HRTIM_TIMA::OUTAR, 3, 1, ReadWriteMode, HRTIM_TIMAOUTARBase> ;
    using IDLEM1 = HRTIM_TIMA_OUTAR_IDLEM1_Values<HRTIM_TIMA::OUTAR, 2, 1, ReadWriteMode, HRTIM_TIMAOUTARBase> ;
    using POL1 = HRTIM_TIMA_OUTAR_POL1_Values<HRTIM_TIMA::OUTAR, 1, 1, ReadWriteMode, HRTIM_TIMAOUTARBase> ;
    using FieldValues = HRTIM_TIMA_OUTAR_POL1_Values<HRTIM_TIMA::OUTAR, 0, 0, NoAccess, NoAccess> ;
  } ;

  template<typename... T> 
  using OUTARPack  = Register<0x400174E4, 32, ReadWriteMode, HRTIM_TIMAOUTARBase, T...> ;

  struct HRTIM_TIMAFLTARBase {} ;

  struct FLTAR : public RegisterBase<0x400174E8, 32, ReadWriteMode>
  {
    using FLTLCK = HRTIM_TIMA_FLTAR_FLTLCK_Values<HRTIM_TIMA::FLTAR, 31, 1, ReadWriteMode, HRTIM_TIMAFLTARBase> ;
    using FLT5EN = HRTIM_TIMA_FLTAR_FLT5EN_Values<HRTIM_TIMA::FLTAR, 4, 1, ReadWriteMode, HRTIM_TIMAFLTARBase> ;
    using FLT4EN = HRTIM_TIMA_FLTAR_FLT4EN_Values<HRTIM_TIMA::FLTAR, 3, 1, ReadWriteMode, HRTIM_TIMAFLTARBase> ;
    using FLT3EN = HRTIM_TIMA_FLTAR_FLT3EN_Values<HRTIM_TIMA::FLTAR, 2, 1, ReadWriteMode, HRTIM_TIMAFLTARBase> ;
    using FLT2EN = HRTIM_TIMA_FLTAR_FLT2EN_Values<HRTIM_TIMA::FLTAR, 1, 1, ReadWriteMode, HRTIM_TIMAFLTARBase> ;
    using FLT1EN = HRTIM_TIMA_FLTAR_FLT1EN_Values<HRTIM_TIMA::FLTAR, 0, 1, ReadWriteMode, HRTIM_TIMAFLTARBase> ;
    using FieldValues = HRTIM_TIMA_FLTAR_FLT1EN_Values<HRTIM_TIMA::FLTAR, 0, 0, NoAccess, NoAccess> ;
  } ;

  template<typename... T> 
  using FLTARPack  = Register<0x400174E8, 32, ReadWriteMode, HRTIM_TIMAFLTARBase, T...> ;

} ;

#endif //#if !defined(HRTIMTIMAREGISTERS_HPP)
