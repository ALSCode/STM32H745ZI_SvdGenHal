/*******************************************************************************
* Filename      : hrtimtimeregisters.hpp
*
* Details       : High Resolution Timer: TIME. This header file is
*                 auto-generated for STM32H745_CM7 device.
*
*
*******************************************************************************/

#if !defined(HRTIMTIMEREGISTERS_HPP)
#define HRTIMTIMEREGISTERS_HPP

#include "hrtimtimefieldvalues.hpp"  //for Bits Fields defs 
#include "registerbase.hpp"   //for RegisterBase
#include "register.hpp"       //for Register
#include "accessmode.hpp"     //for ReadMode, WriteMode, ReadWriteMode  

struct HRTIM_TIME
{
  struct HRTIM_TIMETIMECRBase {} ;

  struct TIMECR : public RegisterBase<0x40017680, 32, ReadWriteMode>
  {
    using UPDGAT = HRTIM_TIME_TIMECR_UPDGAT_Values<HRTIM_TIME::TIMECR, 28, 4, ReadWriteMode, HRTIM_TIMETIMECRBase> ;
    using PREEN = HRTIM_TIME_TIMECR_PREEN_Values<HRTIM_TIME::TIMECR, 27, 1, ReadWriteMode, HRTIM_TIMETIMECRBase> ;
    using DACSYNC = HRTIM_TIME_TIMECR_DACSYNC_Values<HRTIM_TIME::TIMECR, 25, 2, ReadWriteMode, HRTIM_TIMETIMECRBase> ;
    using MSTU = HRTIM_TIME_TIMECR_MSTU_Values<HRTIM_TIME::TIMECR, 24, 1, ReadWriteMode, HRTIM_TIMETIMECRBase> ;
    using TEU = HRTIM_TIME_TIMECR_TEU_Values<HRTIM_TIME::TIMECR, 23, 1, ReadWriteMode, HRTIM_TIMETIMECRBase> ;
    using TDU = HRTIM_TIME_TIMECR_TDU_Values<HRTIM_TIME::TIMECR, 22, 1, ReadWriteMode, HRTIM_TIMETIMECRBase> ;
    using TCU = HRTIM_TIME_TIMECR_TCU_Values<HRTIM_TIME::TIMECR, 21, 1, ReadWriteMode, HRTIM_TIMETIMECRBase> ;
    using TBU = HRTIM_TIME_TIMECR_TBU_Values<HRTIM_TIME::TIMECR, 20, 1, ReadWriteMode, HRTIM_TIMETIMECRBase> ;
    using TxRSTU = HRTIM_TIME_TIMECR_TxRSTU_Values<HRTIM_TIME::TIMECR, 18, 1, ReadWriteMode, HRTIM_TIMETIMECRBase> ;
    using TxREPU = HRTIM_TIME_TIMECR_TxREPU_Values<HRTIM_TIME::TIMECR, 17, 1, ReadWriteMode, HRTIM_TIMETIMECRBase> ;
    using DELCMP4 = HRTIM_TIME_TIMECR_DELCMP4_Values<HRTIM_TIME::TIMECR, 14, 2, ReadWriteMode, HRTIM_TIMETIMECRBase> ;
    using DELCMP2 = HRTIM_TIME_TIMECR_DELCMP2_Values<HRTIM_TIME::TIMECR, 12, 2, ReadWriteMode, HRTIM_TIMETIMECRBase> ;
    using SYNCSTRTx = HRTIM_TIME_TIMECR_SYNCSTRTx_Values<HRTIM_TIME::TIMECR, 11, 1, ReadWriteMode, HRTIM_TIMETIMECRBase> ;
    using SYNCRSTx = HRTIM_TIME_TIMECR_SYNCRSTx_Values<HRTIM_TIME::TIMECR, 10, 1, ReadWriteMode, HRTIM_TIMETIMECRBase> ;
    using PSHPLL = HRTIM_TIME_TIMECR_PSHPLL_Values<HRTIM_TIME::TIMECR, 6, 1, ReadWriteMode, HRTIM_TIMETIMECRBase> ;
    using HALF = HRTIM_TIME_TIMECR_HALF_Values<HRTIM_TIME::TIMECR, 5, 1, ReadWriteMode, HRTIM_TIMETIMECRBase> ;
    using RETRIG = HRTIM_TIME_TIMECR_RETRIG_Values<HRTIM_TIME::TIMECR, 4, 1, ReadWriteMode, HRTIM_TIMETIMECRBase> ;
    using CONT = HRTIM_TIME_TIMECR_CONT_Values<HRTIM_TIME::TIMECR, 3, 1, ReadWriteMode, HRTIM_TIMETIMECRBase> ;
    using CK_PSCx = HRTIM_TIME_TIMECR_CK_PSCx_Values<HRTIM_TIME::TIMECR, 0, 3, ReadWriteMode, HRTIM_TIMETIMECRBase> ;
    using FieldValues = HRTIM_TIME_TIMECR_CK_PSCx_Values<HRTIM_TIME::TIMECR, 0, 0, NoAccess, NoAccess> ;
  } ;

  template<typename... T> 
  using TIMECRPack  = Register<0x40017680, 32, ReadWriteMode, HRTIM_TIMETIMECRBase, T...> ;

  struct HRTIM_TIMETIMEISRBase {} ;

  struct TIMEISR : public RegisterBase<0x40017684, 32, ReadMode>
  {
    using O2STAT = HRTIM_TIME_TIMEISR_O2STAT_Values<HRTIM_TIME::TIMEISR, 19, 1, ReadMode, HRTIM_TIMETIMEISRBase> ;
    using O1STAT = HRTIM_TIME_TIMEISR_O1STAT_Values<HRTIM_TIME::TIMEISR, 18, 1, ReadMode, HRTIM_TIMETIMEISRBase> ;
    using IPPSTAT = HRTIM_TIME_TIMEISR_IPPSTAT_Values<HRTIM_TIME::TIMEISR, 17, 1, ReadMode, HRTIM_TIMETIMEISRBase> ;
    using CPPSTAT = HRTIM_TIME_TIMEISR_CPPSTAT_Values<HRTIM_TIME::TIMEISR, 16, 1, ReadMode, HRTIM_TIMETIMEISRBase> ;
    using DLYPRT = HRTIM_TIME_TIMEISR_DLYPRT_Values<HRTIM_TIME::TIMEISR, 14, 1, ReadMode, HRTIM_TIMETIMEISRBase> ;
    using RST = HRTIM_TIME_TIMEISR_RST_Values<HRTIM_TIME::TIMEISR, 13, 1, ReadMode, HRTIM_TIMETIMEISRBase> ;
    using RSTx2 = HRTIM_TIME_TIMEISR_RSTx2_Values<HRTIM_TIME::TIMEISR, 12, 1, ReadMode, HRTIM_TIMETIMEISRBase> ;
    using SETx2 = HRTIM_TIME_TIMEISR_SETx2_Values<HRTIM_TIME::TIMEISR, 11, 1, ReadMode, HRTIM_TIMETIMEISRBase> ;
    using RSTx1 = HRTIM_TIME_TIMEISR_RSTx1_Values<HRTIM_TIME::TIMEISR, 10, 1, ReadMode, HRTIM_TIMETIMEISRBase> ;
    using SETx1 = HRTIM_TIME_TIMEISR_SETx1_Values<HRTIM_TIME::TIMEISR, 9, 1, ReadMode, HRTIM_TIMETIMEISRBase> ;
    using CPT2 = HRTIM_TIME_TIMEISR_CPT2_Values<HRTIM_TIME::TIMEISR, 8, 1, ReadMode, HRTIM_TIMETIMEISRBase> ;
    using CPT1 = HRTIM_TIME_TIMEISR_CPT1_Values<HRTIM_TIME::TIMEISR, 7, 1, ReadMode, HRTIM_TIMETIMEISRBase> ;
    using UPD = HRTIM_TIME_TIMEISR_UPD_Values<HRTIM_TIME::TIMEISR, 6, 1, ReadMode, HRTIM_TIMETIMEISRBase> ;
    using REP = HRTIM_TIME_TIMEISR_REP_Values<HRTIM_TIME::TIMEISR, 4, 1, ReadMode, HRTIM_TIMETIMEISRBase> ;
    using CMP4 = HRTIM_TIME_TIMEISR_CMP4_Values<HRTIM_TIME::TIMEISR, 3, 1, ReadMode, HRTIM_TIMETIMEISRBase> ;
    using CMP3 = HRTIM_TIME_TIMEISR_CMP3_Values<HRTIM_TIME::TIMEISR, 2, 1, ReadMode, HRTIM_TIMETIMEISRBase> ;
    using CMP2 = HRTIM_TIME_TIMEISR_CMP2_Values<HRTIM_TIME::TIMEISR, 1, 1, ReadMode, HRTIM_TIMETIMEISRBase> ;
    using CMP1 = HRTIM_TIME_TIMEISR_CMP1_Values<HRTIM_TIME::TIMEISR, 0, 1, ReadMode, HRTIM_TIMETIMEISRBase> ;
    using FieldValues = HRTIM_TIME_TIMEISR_CMP1_Values<HRTIM_TIME::TIMEISR, 0, 0, NoAccess, NoAccess> ;
  } ;

  template<typename... T> 
  using TIMEISRPack  = Register<0x40017684, 32, ReadMode, HRTIM_TIMETIMEISRBase, T...> ;

  struct HRTIM_TIMETIMEICRBase {} ;

  struct TIMEICR : public RegisterBase<0x40017688, 32, WriteMode>
  {
    using DLYPRTC = HRTIM_TIME_TIMEICR_DLYPRTC_Values<HRTIM_TIME::TIMEICR, 14, 1, WriteMode, HRTIM_TIMETIMEICRBase> ;
    using RSTC = HRTIM_TIME_TIMEICR_RSTC_Values<HRTIM_TIME::TIMEICR, 13, 1, WriteMode, HRTIM_TIMETIMEICRBase> ;
    using RSTx2C = HRTIM_TIME_TIMEICR_RSTx2C_Values<HRTIM_TIME::TIMEICR, 12, 1, WriteMode, HRTIM_TIMETIMEICRBase> ;
    using SET2xC = HRTIM_TIME_TIMEICR_SET2xC_Values<HRTIM_TIME::TIMEICR, 11, 1, WriteMode, HRTIM_TIMETIMEICRBase> ;
    using RSTx1C = HRTIM_TIME_TIMEICR_RSTx1C_Values<HRTIM_TIME::TIMEICR, 10, 1, WriteMode, HRTIM_TIMETIMEICRBase> ;
    using SET1xC = HRTIM_TIME_TIMEICR_SET1xC_Values<HRTIM_TIME::TIMEICR, 9, 1, WriteMode, HRTIM_TIMETIMEICRBase> ;
    using CPT2C = HRTIM_TIME_TIMEICR_CPT2C_Values<HRTIM_TIME::TIMEICR, 8, 1, WriteMode, HRTIM_TIMETIMEICRBase> ;
    using CPT1C = HRTIM_TIME_TIMEICR_CPT1C_Values<HRTIM_TIME::TIMEICR, 7, 1, WriteMode, HRTIM_TIMETIMEICRBase> ;
    using UPDC = HRTIM_TIME_TIMEICR_UPDC_Values<HRTIM_TIME::TIMEICR, 6, 1, WriteMode, HRTIM_TIMETIMEICRBase> ;
    using REPC = HRTIM_TIME_TIMEICR_REPC_Values<HRTIM_TIME::TIMEICR, 4, 1, WriteMode, HRTIM_TIMETIMEICRBase> ;
    using CMP4C = HRTIM_TIME_TIMEICR_CMP4C_Values<HRTIM_TIME::TIMEICR, 3, 1, WriteMode, HRTIM_TIMETIMEICRBase> ;
    using CMP3C = HRTIM_TIME_TIMEICR_CMP3C_Values<HRTIM_TIME::TIMEICR, 2, 1, WriteMode, HRTIM_TIMETIMEICRBase> ;
    using CMP2C = HRTIM_TIME_TIMEICR_CMP2C_Values<HRTIM_TIME::TIMEICR, 1, 1, WriteMode, HRTIM_TIMETIMEICRBase> ;
    using CMP1C = HRTIM_TIME_TIMEICR_CMP1C_Values<HRTIM_TIME::TIMEICR, 0, 1, WriteMode, HRTIM_TIMETIMEICRBase> ;
    using FieldValues = HRTIM_TIME_TIMEICR_CMP1C_Values<HRTIM_TIME::TIMEICR, 0, 0, NoAccess, NoAccess> ;
  } ;

  template<typename... T> 
  using TIMEICRPack  = Register<0x40017688, 32, WriteMode, HRTIM_TIMETIMEICRBase, T...> ;

  struct HRTIM_TIMETIMEDIER5Base {} ;

  struct TIMEDIER5 : public RegisterBase<0x4001768C, 32, ReadWriteMode>
  {
    using DLYPRTDE = HRTIM_TIME_TIMEDIER5_DLYPRTDE_Values<HRTIM_TIME::TIMEDIER5, 30, 1, ReadWriteMode, HRTIM_TIMETIMEDIER5Base> ;
    using RSTDE = HRTIM_TIME_TIMEDIER5_RSTDE_Values<HRTIM_TIME::TIMEDIER5, 29, 1, ReadWriteMode, HRTIM_TIMETIMEDIER5Base> ;
    using RSTx2DE = HRTIM_TIME_TIMEDIER5_RSTx2DE_Values<HRTIM_TIME::TIMEDIER5, 28, 1, ReadWriteMode, HRTIM_TIMETIMEDIER5Base> ;
    using SETx2DE = HRTIM_TIME_TIMEDIER5_SETx2DE_Values<HRTIM_TIME::TIMEDIER5, 27, 1, ReadWriteMode, HRTIM_TIMETIMEDIER5Base> ;
    using RSTx1DE = HRTIM_TIME_TIMEDIER5_RSTx1DE_Values<HRTIM_TIME::TIMEDIER5, 26, 1, ReadWriteMode, HRTIM_TIMETIMEDIER5Base> ;
    using SET1xDE = HRTIM_TIME_TIMEDIER5_SET1xDE_Values<HRTIM_TIME::TIMEDIER5, 25, 1, ReadWriteMode, HRTIM_TIMETIMEDIER5Base> ;
    using CPT2DE = HRTIM_TIME_TIMEDIER5_CPT2DE_Values<HRTIM_TIME::TIMEDIER5, 24, 1, ReadWriteMode, HRTIM_TIMETIMEDIER5Base> ;
    using CPT1DE = HRTIM_TIME_TIMEDIER5_CPT1DE_Values<HRTIM_TIME::TIMEDIER5, 23, 1, ReadWriteMode, HRTIM_TIMETIMEDIER5Base> ;
    using UPDDE = HRTIM_TIME_TIMEDIER5_UPDDE_Values<HRTIM_TIME::TIMEDIER5, 22, 1, ReadWriteMode, HRTIM_TIMETIMEDIER5Base> ;
    using REPDE = HRTIM_TIME_TIMEDIER5_REPDE_Values<HRTIM_TIME::TIMEDIER5, 20, 1, ReadWriteMode, HRTIM_TIMETIMEDIER5Base> ;
    using CMP4DE = HRTIM_TIME_TIMEDIER5_CMP4DE_Values<HRTIM_TIME::TIMEDIER5, 19, 1, ReadWriteMode, HRTIM_TIMETIMEDIER5Base> ;
    using CMP3DE = HRTIM_TIME_TIMEDIER5_CMP3DE_Values<HRTIM_TIME::TIMEDIER5, 18, 1, ReadWriteMode, HRTIM_TIMETIMEDIER5Base> ;
    using CMP2DE = HRTIM_TIME_TIMEDIER5_CMP2DE_Values<HRTIM_TIME::TIMEDIER5, 17, 1, ReadWriteMode, HRTIM_TIMETIMEDIER5Base> ;
    using CMP1DE = HRTIM_TIME_TIMEDIER5_CMP1DE_Values<HRTIM_TIME::TIMEDIER5, 16, 1, ReadWriteMode, HRTIM_TIMETIMEDIER5Base> ;
    using DLYPRTIE = HRTIM_TIME_TIMEDIER5_DLYPRTIE_Values<HRTIM_TIME::TIMEDIER5, 14, 1, ReadWriteMode, HRTIM_TIMETIMEDIER5Base> ;
    using RSTIE = HRTIM_TIME_TIMEDIER5_RSTIE_Values<HRTIM_TIME::TIMEDIER5, 13, 1, ReadWriteMode, HRTIM_TIMETIMEDIER5Base> ;
    using RSTx2IE = HRTIM_TIME_TIMEDIER5_RSTx2IE_Values<HRTIM_TIME::TIMEDIER5, 12, 1, ReadWriteMode, HRTIM_TIMETIMEDIER5Base> ;
    using SETx2IE = HRTIM_TIME_TIMEDIER5_SETx2IE_Values<HRTIM_TIME::TIMEDIER5, 11, 1, ReadWriteMode, HRTIM_TIMETIMEDIER5Base> ;
    using RSTx1IE = HRTIM_TIME_TIMEDIER5_RSTx1IE_Values<HRTIM_TIME::TIMEDIER5, 10, 1, ReadWriteMode, HRTIM_TIMETIMEDIER5Base> ;
    using SET1xIE = HRTIM_TIME_TIMEDIER5_SET1xIE_Values<HRTIM_TIME::TIMEDIER5, 9, 1, ReadWriteMode, HRTIM_TIMETIMEDIER5Base> ;
    using CPT2IE = HRTIM_TIME_TIMEDIER5_CPT2IE_Values<HRTIM_TIME::TIMEDIER5, 8, 1, ReadWriteMode, HRTIM_TIMETIMEDIER5Base> ;
    using CPT1IE = HRTIM_TIME_TIMEDIER5_CPT1IE_Values<HRTIM_TIME::TIMEDIER5, 7, 1, ReadWriteMode, HRTIM_TIMETIMEDIER5Base> ;
    using UPDIE = HRTIM_TIME_TIMEDIER5_UPDIE_Values<HRTIM_TIME::TIMEDIER5, 6, 1, ReadWriteMode, HRTIM_TIMETIMEDIER5Base> ;
    using REPIE = HRTIM_TIME_TIMEDIER5_REPIE_Values<HRTIM_TIME::TIMEDIER5, 4, 1, ReadWriteMode, HRTIM_TIMETIMEDIER5Base> ;
    using CMP4IE = HRTIM_TIME_TIMEDIER5_CMP4IE_Values<HRTIM_TIME::TIMEDIER5, 3, 1, ReadWriteMode, HRTIM_TIMETIMEDIER5Base> ;
    using CMP3IE = HRTIM_TIME_TIMEDIER5_CMP3IE_Values<HRTIM_TIME::TIMEDIER5, 2, 1, ReadWriteMode, HRTIM_TIMETIMEDIER5Base> ;
    using CMP2IE = HRTIM_TIME_TIMEDIER5_CMP2IE_Values<HRTIM_TIME::TIMEDIER5, 1, 1, ReadWriteMode, HRTIM_TIMETIMEDIER5Base> ;
    using CMP1IE = HRTIM_TIME_TIMEDIER5_CMP1IE_Values<HRTIM_TIME::TIMEDIER5, 0, 1, ReadWriteMode, HRTIM_TIMETIMEDIER5Base> ;
    using FieldValues = HRTIM_TIME_TIMEDIER5_CMP1IE_Values<HRTIM_TIME::TIMEDIER5, 0, 0, NoAccess, NoAccess> ;
  } ;

  template<typename... T> 
  using TIMEDIER5Pack  = Register<0x4001768C, 32, ReadWriteMode, HRTIM_TIMETIMEDIER5Base, T...> ;

  struct HRTIM_TIMECNTERBase {} ;

  struct CNTER : public RegisterBase<0x40017690, 32, ReadWriteMode>
  {
    using CNTx = HRTIM_TIME_CNTER_CNTx_Values<HRTIM_TIME::CNTER, 0, 16, ReadWriteMode, HRTIM_TIMECNTERBase> ;
    using FieldValues = HRTIM_TIME_CNTER_CNTx_Values<HRTIM_TIME::CNTER, 0, 0, NoAccess, NoAccess> ;
  } ;

  template<typename... T> 
  using CNTERPack  = Register<0x40017690, 32, ReadWriteMode, HRTIM_TIMECNTERBase, T...> ;

  struct HRTIM_TIMEPERERBase {} ;

  struct PERER : public RegisterBase<0x40017694, 32, ReadWriteMode>
  {
    using PERx = HRTIM_TIME_PERER_PERx_Values<HRTIM_TIME::PERER, 0, 16, ReadWriteMode, HRTIM_TIMEPERERBase> ;
    using FieldValues = HRTIM_TIME_PERER_PERx_Values<HRTIM_TIME::PERER, 0, 0, NoAccess, NoAccess> ;
  } ;

  template<typename... T> 
  using PERERPack  = Register<0x40017694, 32, ReadWriteMode, HRTIM_TIMEPERERBase, T...> ;

  struct HRTIM_TIMEREPERBase {} ;

  struct REPER : public RegisterBase<0x40017698, 32, ReadWriteMode>
  {
    using REPx = HRTIM_TIME_REPER_REPx_Values<HRTIM_TIME::REPER, 0, 8, ReadWriteMode, HRTIM_TIMEREPERBase> ;
    using FieldValues = HRTIM_TIME_REPER_REPx_Values<HRTIM_TIME::REPER, 0, 0, NoAccess, NoAccess> ;
  } ;

  template<typename... T> 
  using REPERPack  = Register<0x40017698, 32, ReadWriteMode, HRTIM_TIMEREPERBase, T...> ;

  struct HRTIM_TIMECMP1ERBase {} ;

  struct CMP1ER : public RegisterBase<0x4001769C, 32, ReadWriteMode>
  {
    using CMP1x = HRTIM_TIME_CMP1ER_CMP1x_Values<HRTIM_TIME::CMP1ER, 0, 16, ReadWriteMode, HRTIM_TIMECMP1ERBase> ;
    using FieldValues = HRTIM_TIME_CMP1ER_CMP1x_Values<HRTIM_TIME::CMP1ER, 0, 0, NoAccess, NoAccess> ;
  } ;

  template<typename... T> 
  using CMP1ERPack  = Register<0x4001769C, 32, ReadWriteMode, HRTIM_TIMECMP1ERBase, T...> ;

  struct HRTIM_TIMECMP1CERBase {} ;

  struct CMP1CER : public RegisterBase<0x400176A0, 32, ReadWriteMode>
  {
    using REPx = HRTIM_TIME_CMP1CER_REPx_Values<HRTIM_TIME::CMP1CER, 16, 8, ReadWriteMode, HRTIM_TIMECMP1CERBase> ;
    using CMP1x = HRTIM_TIME_CMP1CER_CMP1x_Values<HRTIM_TIME::CMP1CER, 0, 16, ReadWriteMode, HRTIM_TIMECMP1CERBase> ;
    using FieldValues = HRTIM_TIME_CMP1CER_CMP1x_Values<HRTIM_TIME::CMP1CER, 0, 0, NoAccess, NoAccess> ;
  } ;

  template<typename... T> 
  using CMP1CERPack  = Register<0x400176A0, 32, ReadWriteMode, HRTIM_TIMECMP1CERBase, T...> ;

  struct HRTIM_TIMECMP2ERBase {} ;

  struct CMP2ER : public RegisterBase<0x400176A4, 32, ReadWriteMode>
  {
    using CMP2x = HRTIM_TIME_CMP2ER_CMP2x_Values<HRTIM_TIME::CMP2ER, 0, 16, ReadWriteMode, HRTIM_TIMECMP2ERBase> ;
    using FieldValues = HRTIM_TIME_CMP2ER_CMP2x_Values<HRTIM_TIME::CMP2ER, 0, 0, NoAccess, NoAccess> ;
  } ;

  template<typename... T> 
  using CMP2ERPack  = Register<0x400176A4, 32, ReadWriteMode, HRTIM_TIMECMP2ERBase, T...> ;

  struct HRTIM_TIMECMP3ERBase {} ;

  struct CMP3ER : public RegisterBase<0x400176A8, 32, ReadWriteMode>
  {
    using CMP3x = HRTIM_TIME_CMP3ER_CMP3x_Values<HRTIM_TIME::CMP3ER, 0, 16, ReadWriteMode, HRTIM_TIMECMP3ERBase> ;
    using FieldValues = HRTIM_TIME_CMP3ER_CMP3x_Values<HRTIM_TIME::CMP3ER, 0, 0, NoAccess, NoAccess> ;
  } ;

  template<typename... T> 
  using CMP3ERPack  = Register<0x400176A8, 32, ReadWriteMode, HRTIM_TIMECMP3ERBase, T...> ;

  struct HRTIM_TIMECMP4ERBase {} ;

  struct CMP4ER : public RegisterBase<0x400176AC, 32, ReadWriteMode>
  {
    using CMP4x = HRTIM_TIME_CMP4ER_CMP4x_Values<HRTIM_TIME::CMP4ER, 0, 16, ReadWriteMode, HRTIM_TIMECMP4ERBase> ;
    using FieldValues = HRTIM_TIME_CMP4ER_CMP4x_Values<HRTIM_TIME::CMP4ER, 0, 0, NoAccess, NoAccess> ;
  } ;

  template<typename... T> 
  using CMP4ERPack  = Register<0x400176AC, 32, ReadWriteMode, HRTIM_TIMECMP4ERBase, T...> ;

  struct HRTIM_TIMECPT1ERBase {} ;

  struct CPT1ER : public RegisterBase<0x400176B0, 32, ReadMode>
  {
    using CPT1x = HRTIM_TIME_CPT1ER_CPT1x_Values<HRTIM_TIME::CPT1ER, 0, 16, ReadMode, HRTIM_TIMECPT1ERBase> ;
    using FieldValues = HRTIM_TIME_CPT1ER_CPT1x_Values<HRTIM_TIME::CPT1ER, 0, 0, NoAccess, NoAccess> ;
  } ;

  template<typename... T> 
  using CPT1ERPack  = Register<0x400176B0, 32, ReadMode, HRTIM_TIMECPT1ERBase, T...> ;

  struct HRTIM_TIMECPT2ERBase {} ;

  struct CPT2ER : public RegisterBase<0x400176B4, 32, ReadMode>
  {
    using CPT2x = HRTIM_TIME_CPT2ER_CPT2x_Values<HRTIM_TIME::CPT2ER, 0, 16, ReadMode, HRTIM_TIMECPT2ERBase> ;
    using FieldValues = HRTIM_TIME_CPT2ER_CPT2x_Values<HRTIM_TIME::CPT2ER, 0, 0, NoAccess, NoAccess> ;
  } ;

  template<typename... T> 
  using CPT2ERPack  = Register<0x400176B4, 32, ReadMode, HRTIM_TIMECPT2ERBase, T...> ;

  struct HRTIM_TIMEDTERBase {} ;

  struct DTER : public RegisterBase<0x400176B8, 32, ReadWriteMode>
  {
    using DTFLKx = HRTIM_TIME_DTER_DTFLKx_Values<HRTIM_TIME::DTER, 31, 1, ReadWriteMode, HRTIM_TIMEDTERBase> ;
    using DTFSLKx = HRTIM_TIME_DTER_DTFSLKx_Values<HRTIM_TIME::DTER, 30, 1, ReadWriteMode, HRTIM_TIMEDTERBase> ;
    using SDTFx = HRTIM_TIME_DTER_SDTFx_Values<HRTIM_TIME::DTER, 25, 1, ReadWriteMode, HRTIM_TIMEDTERBase> ;
    using DTFx = HRTIM_TIME_DTER_DTFx_Values<HRTIM_TIME::DTER, 16, 9, ReadWriteMode, HRTIM_TIMEDTERBase> ;
    using DTRLKx = HRTIM_TIME_DTER_DTRLKx_Values<HRTIM_TIME::DTER, 15, 1, ReadWriteMode, HRTIM_TIMEDTERBase> ;
    using DTRSLKx = HRTIM_TIME_DTER_DTRSLKx_Values<HRTIM_TIME::DTER, 14, 1, ReadWriteMode, HRTIM_TIMEDTERBase> ;
    using DTPRSC = HRTIM_TIME_DTER_DTPRSC_Values<HRTIM_TIME::DTER, 10, 3, ReadWriteMode, HRTIM_TIMEDTERBase> ;
    using SDTRx = HRTIM_TIME_DTER_SDTRx_Values<HRTIM_TIME::DTER, 9, 1, ReadWriteMode, HRTIM_TIMEDTERBase> ;
    using DTRx = HRTIM_TIME_DTER_DTRx_Values<HRTIM_TIME::DTER, 0, 9, ReadWriteMode, HRTIM_TIMEDTERBase> ;
    using FieldValues = HRTIM_TIME_DTER_DTRx_Values<HRTIM_TIME::DTER, 0, 0, NoAccess, NoAccess> ;
  } ;

  template<typename... T> 
  using DTERPack  = Register<0x400176B8, 32, ReadWriteMode, HRTIM_TIMEDTERBase, T...> ;

  struct HRTIM_TIMESETE1RBase {} ;

  struct SETE1R : public RegisterBase<0x400176BC, 32, ReadWriteMode>
  {
    using UPDATE = HRTIM_TIME_SETE1R_UPDATE_Values<HRTIM_TIME::SETE1R, 31, 1, ReadWriteMode, HRTIM_TIMESETE1RBase> ;
    using EXTEVNT10 = HRTIM_TIME_SETE1R_EXTEVNT10_Values<HRTIM_TIME::SETE1R, 30, 1, ReadWriteMode, HRTIM_TIMESETE1RBase> ;
    using EXTEVNT9 = HRTIM_TIME_SETE1R_EXTEVNT9_Values<HRTIM_TIME::SETE1R, 29, 1, ReadWriteMode, HRTIM_TIMESETE1RBase> ;
    using EXTEVNT8 = HRTIM_TIME_SETE1R_EXTEVNT8_Values<HRTIM_TIME::SETE1R, 28, 1, ReadWriteMode, HRTIM_TIMESETE1RBase> ;
    using EXTEVNT7 = HRTIM_TIME_SETE1R_EXTEVNT7_Values<HRTIM_TIME::SETE1R, 27, 1, ReadWriteMode, HRTIM_TIMESETE1RBase> ;
    using EXTEVNT6 = HRTIM_TIME_SETE1R_EXTEVNT6_Values<HRTIM_TIME::SETE1R, 26, 1, ReadWriteMode, HRTIM_TIMESETE1RBase> ;
    using EXTEVNT5 = HRTIM_TIME_SETE1R_EXTEVNT5_Values<HRTIM_TIME::SETE1R, 25, 1, ReadWriteMode, HRTIM_TIMESETE1RBase> ;
    using EXTEVNT4 = HRTIM_TIME_SETE1R_EXTEVNT4_Values<HRTIM_TIME::SETE1R, 24, 1, ReadWriteMode, HRTIM_TIMESETE1RBase> ;
    using EXTEVNT3 = HRTIM_TIME_SETE1R_EXTEVNT3_Values<HRTIM_TIME::SETE1R, 23, 1, ReadWriteMode, HRTIM_TIMESETE1RBase> ;
    using EXTEVNT2 = HRTIM_TIME_SETE1R_EXTEVNT2_Values<HRTIM_TIME::SETE1R, 22, 1, ReadWriteMode, HRTIM_TIMESETE1RBase> ;
    using EXTEVNT1 = HRTIM_TIME_SETE1R_EXTEVNT1_Values<HRTIM_TIME::SETE1R, 21, 1, ReadWriteMode, HRTIM_TIMESETE1RBase> ;
    using TIMEVNT9 = HRTIM_TIME_SETE1R_TIMEVNT9_Values<HRTIM_TIME::SETE1R, 20, 1, ReadWriteMode, HRTIM_TIMESETE1RBase> ;
    using TIMEVNT8 = HRTIM_TIME_SETE1R_TIMEVNT8_Values<HRTIM_TIME::SETE1R, 19, 1, ReadWriteMode, HRTIM_TIMESETE1RBase> ;
    using TIMEVNT7 = HRTIM_TIME_SETE1R_TIMEVNT7_Values<HRTIM_TIME::SETE1R, 18, 1, ReadWriteMode, HRTIM_TIMESETE1RBase> ;
    using TIMEVNT6 = HRTIM_TIME_SETE1R_TIMEVNT6_Values<HRTIM_TIME::SETE1R, 17, 1, ReadWriteMode, HRTIM_TIMESETE1RBase> ;
    using TIMEVNT5 = HRTIM_TIME_SETE1R_TIMEVNT5_Values<HRTIM_TIME::SETE1R, 16, 1, ReadWriteMode, HRTIM_TIMESETE1RBase> ;
    using TIMEVNT4 = HRTIM_TIME_SETE1R_TIMEVNT4_Values<HRTIM_TIME::SETE1R, 15, 1, ReadWriteMode, HRTIM_TIMESETE1RBase> ;
    using TIMEVNT3 = HRTIM_TIME_SETE1R_TIMEVNT3_Values<HRTIM_TIME::SETE1R, 14, 1, ReadWriteMode, HRTIM_TIMESETE1RBase> ;
    using TIMEVNT2 = HRTIM_TIME_SETE1R_TIMEVNT2_Values<HRTIM_TIME::SETE1R, 13, 1, ReadWriteMode, HRTIM_TIMESETE1RBase> ;
    using TIMEVNT1 = HRTIM_TIME_SETE1R_TIMEVNT1_Values<HRTIM_TIME::SETE1R, 12, 1, ReadWriteMode, HRTIM_TIMESETE1RBase> ;
    using MSTCMP4 = HRTIM_TIME_SETE1R_MSTCMP4_Values<HRTIM_TIME::SETE1R, 11, 1, ReadWriteMode, HRTIM_TIMESETE1RBase> ;
    using MSTCMP3 = HRTIM_TIME_SETE1R_MSTCMP3_Values<HRTIM_TIME::SETE1R, 10, 1, ReadWriteMode, HRTIM_TIMESETE1RBase> ;
    using MSTCMP2 = HRTIM_TIME_SETE1R_MSTCMP2_Values<HRTIM_TIME::SETE1R, 9, 1, ReadWriteMode, HRTIM_TIMESETE1RBase> ;
    using MSTCMP1 = HRTIM_TIME_SETE1R_MSTCMP1_Values<HRTIM_TIME::SETE1R, 8, 1, ReadWriteMode, HRTIM_TIMESETE1RBase> ;
    using MSTPER = HRTIM_TIME_SETE1R_MSTPER_Values<HRTIM_TIME::SETE1R, 7, 1, ReadWriteMode, HRTIM_TIMESETE1RBase> ;
    using CMP4 = HRTIM_TIME_SETE1R_CMP4_Values<HRTIM_TIME::SETE1R, 6, 1, ReadWriteMode, HRTIM_TIMESETE1RBase> ;
    using CMP3 = HRTIM_TIME_SETE1R_CMP3_Values<HRTIM_TIME::SETE1R, 5, 1, ReadWriteMode, HRTIM_TIMESETE1RBase> ;
    using CMP2 = HRTIM_TIME_SETE1R_CMP2_Values<HRTIM_TIME::SETE1R, 4, 1, ReadWriteMode, HRTIM_TIMESETE1RBase> ;
    using CMP1 = HRTIM_TIME_SETE1R_CMP1_Values<HRTIM_TIME::SETE1R, 3, 1, ReadWriteMode, HRTIM_TIMESETE1RBase> ;
    using PER = HRTIM_TIME_SETE1R_PER_Values<HRTIM_TIME::SETE1R, 2, 1, ReadWriteMode, HRTIM_TIMESETE1RBase> ;
    using RESYNC = HRTIM_TIME_SETE1R_RESYNC_Values<HRTIM_TIME::SETE1R, 1, 1, ReadWriteMode, HRTIM_TIMESETE1RBase> ;
    using SST = HRTIM_TIME_SETE1R_SST_Values<HRTIM_TIME::SETE1R, 0, 1, ReadWriteMode, HRTIM_TIMESETE1RBase> ;
    using FieldValues = HRTIM_TIME_SETE1R_SST_Values<HRTIM_TIME::SETE1R, 0, 0, NoAccess, NoAccess> ;
  } ;

  template<typename... T> 
  using SETE1RPack  = Register<0x400176BC, 32, ReadWriteMode, HRTIM_TIMESETE1RBase, T...> ;

  struct HRTIM_TIMERSTE1RBase {} ;

  struct RSTE1R : public RegisterBase<0x400176C0, 32, ReadWriteMode>
  {
    using UPDATE = HRTIM_TIME_RSTE1R_UPDATE_Values<HRTIM_TIME::RSTE1R, 31, 1, ReadWriteMode, HRTIM_TIMERSTE1RBase> ;
    using EXTEVNT10 = HRTIM_TIME_RSTE1R_EXTEVNT10_Values<HRTIM_TIME::RSTE1R, 30, 1, ReadWriteMode, HRTIM_TIMERSTE1RBase> ;
    using EXTEVNT9 = HRTIM_TIME_RSTE1R_EXTEVNT9_Values<HRTIM_TIME::RSTE1R, 29, 1, ReadWriteMode, HRTIM_TIMERSTE1RBase> ;
    using EXTEVNT8 = HRTIM_TIME_RSTE1R_EXTEVNT8_Values<HRTIM_TIME::RSTE1R, 28, 1, ReadWriteMode, HRTIM_TIMERSTE1RBase> ;
    using EXTEVNT7 = HRTIM_TIME_RSTE1R_EXTEVNT7_Values<HRTIM_TIME::RSTE1R, 27, 1, ReadWriteMode, HRTIM_TIMERSTE1RBase> ;
    using EXTEVNT6 = HRTIM_TIME_RSTE1R_EXTEVNT6_Values<HRTIM_TIME::RSTE1R, 26, 1, ReadWriteMode, HRTIM_TIMERSTE1RBase> ;
    using EXTEVNT5 = HRTIM_TIME_RSTE1R_EXTEVNT5_Values<HRTIM_TIME::RSTE1R, 25, 1, ReadWriteMode, HRTIM_TIMERSTE1RBase> ;
    using EXTEVNT4 = HRTIM_TIME_RSTE1R_EXTEVNT4_Values<HRTIM_TIME::RSTE1R, 24, 1, ReadWriteMode, HRTIM_TIMERSTE1RBase> ;
    using EXTEVNT3 = HRTIM_TIME_RSTE1R_EXTEVNT3_Values<HRTIM_TIME::RSTE1R, 23, 1, ReadWriteMode, HRTIM_TIMERSTE1RBase> ;
    using EXTEVNT2 = HRTIM_TIME_RSTE1R_EXTEVNT2_Values<HRTIM_TIME::RSTE1R, 22, 1, ReadWriteMode, HRTIM_TIMERSTE1RBase> ;
    using EXTEVNT1 = HRTIM_TIME_RSTE1R_EXTEVNT1_Values<HRTIM_TIME::RSTE1R, 21, 1, ReadWriteMode, HRTIM_TIMERSTE1RBase> ;
    using TIMEVNT9 = HRTIM_TIME_RSTE1R_TIMEVNT9_Values<HRTIM_TIME::RSTE1R, 20, 1, ReadWriteMode, HRTIM_TIMERSTE1RBase> ;
    using TIMEVNT8 = HRTIM_TIME_RSTE1R_TIMEVNT8_Values<HRTIM_TIME::RSTE1R, 19, 1, ReadWriteMode, HRTIM_TIMERSTE1RBase> ;
    using TIMEVNT7 = HRTIM_TIME_RSTE1R_TIMEVNT7_Values<HRTIM_TIME::RSTE1R, 18, 1, ReadWriteMode, HRTIM_TIMERSTE1RBase> ;
    using TIMEVNT6 = HRTIM_TIME_RSTE1R_TIMEVNT6_Values<HRTIM_TIME::RSTE1R, 17, 1, ReadWriteMode, HRTIM_TIMERSTE1RBase> ;
    using TIMEVNT5 = HRTIM_TIME_RSTE1R_TIMEVNT5_Values<HRTIM_TIME::RSTE1R, 16, 1, ReadWriteMode, HRTIM_TIMERSTE1RBase> ;
    using TIMEVNT4 = HRTIM_TIME_RSTE1R_TIMEVNT4_Values<HRTIM_TIME::RSTE1R, 15, 1, ReadWriteMode, HRTIM_TIMERSTE1RBase> ;
    using TIMEVNT3 = HRTIM_TIME_RSTE1R_TIMEVNT3_Values<HRTIM_TIME::RSTE1R, 14, 1, ReadWriteMode, HRTIM_TIMERSTE1RBase> ;
    using TIMEVNT2 = HRTIM_TIME_RSTE1R_TIMEVNT2_Values<HRTIM_TIME::RSTE1R, 13, 1, ReadWriteMode, HRTIM_TIMERSTE1RBase> ;
    using TIMEVNT1 = HRTIM_TIME_RSTE1R_TIMEVNT1_Values<HRTIM_TIME::RSTE1R, 12, 1, ReadWriteMode, HRTIM_TIMERSTE1RBase> ;
    using MSTCMP4 = HRTIM_TIME_RSTE1R_MSTCMP4_Values<HRTIM_TIME::RSTE1R, 11, 1, ReadWriteMode, HRTIM_TIMERSTE1RBase> ;
    using MSTCMP3 = HRTIM_TIME_RSTE1R_MSTCMP3_Values<HRTIM_TIME::RSTE1R, 10, 1, ReadWriteMode, HRTIM_TIMERSTE1RBase> ;
    using MSTCMP2 = HRTIM_TIME_RSTE1R_MSTCMP2_Values<HRTIM_TIME::RSTE1R, 9, 1, ReadWriteMode, HRTIM_TIMERSTE1RBase> ;
    using MSTCMP1 = HRTIM_TIME_RSTE1R_MSTCMP1_Values<HRTIM_TIME::RSTE1R, 8, 1, ReadWriteMode, HRTIM_TIMERSTE1RBase> ;
    using MSTPER = HRTIM_TIME_RSTE1R_MSTPER_Values<HRTIM_TIME::RSTE1R, 7, 1, ReadWriteMode, HRTIM_TIMERSTE1RBase> ;
    using CMP4 = HRTIM_TIME_RSTE1R_CMP4_Values<HRTIM_TIME::RSTE1R, 6, 1, ReadWriteMode, HRTIM_TIMERSTE1RBase> ;
    using CMP3 = HRTIM_TIME_RSTE1R_CMP3_Values<HRTIM_TIME::RSTE1R, 5, 1, ReadWriteMode, HRTIM_TIMERSTE1RBase> ;
    using CMP2 = HRTIM_TIME_RSTE1R_CMP2_Values<HRTIM_TIME::RSTE1R, 4, 1, ReadWriteMode, HRTIM_TIMERSTE1RBase> ;
    using CMP1 = HRTIM_TIME_RSTE1R_CMP1_Values<HRTIM_TIME::RSTE1R, 3, 1, ReadWriteMode, HRTIM_TIMERSTE1RBase> ;
    using PER = HRTIM_TIME_RSTE1R_PER_Values<HRTIM_TIME::RSTE1R, 2, 1, ReadWriteMode, HRTIM_TIMERSTE1RBase> ;
    using RESYNC = HRTIM_TIME_RSTE1R_RESYNC_Values<HRTIM_TIME::RSTE1R, 1, 1, ReadWriteMode, HRTIM_TIMERSTE1RBase> ;
    using SRT = HRTIM_TIME_RSTE1R_SRT_Values<HRTIM_TIME::RSTE1R, 0, 1, ReadWriteMode, HRTIM_TIMERSTE1RBase> ;
    using FieldValues = HRTIM_TIME_RSTE1R_SRT_Values<HRTIM_TIME::RSTE1R, 0, 0, NoAccess, NoAccess> ;
  } ;

  template<typename... T> 
  using RSTE1RPack  = Register<0x400176C0, 32, ReadWriteMode, HRTIM_TIMERSTE1RBase, T...> ;

  struct HRTIM_TIMESETE2RBase {} ;

  struct SETE2R : public RegisterBase<0x400176C4, 32, ReadWriteMode>
  {
    using UPDATE = HRTIM_TIME_SETE2R_UPDATE_Values<HRTIM_TIME::SETE2R, 31, 1, ReadWriteMode, HRTIM_TIMESETE2RBase> ;
    using EXTEVNT10 = HRTIM_TIME_SETE2R_EXTEVNT10_Values<HRTIM_TIME::SETE2R, 30, 1, ReadWriteMode, HRTIM_TIMESETE2RBase> ;
    using EXTEVNT9 = HRTIM_TIME_SETE2R_EXTEVNT9_Values<HRTIM_TIME::SETE2R, 29, 1, ReadWriteMode, HRTIM_TIMESETE2RBase> ;
    using EXTEVNT8 = HRTIM_TIME_SETE2R_EXTEVNT8_Values<HRTIM_TIME::SETE2R, 28, 1, ReadWriteMode, HRTIM_TIMESETE2RBase> ;
    using EXTEVNT7 = HRTIM_TIME_SETE2R_EXTEVNT7_Values<HRTIM_TIME::SETE2R, 27, 1, ReadWriteMode, HRTIM_TIMESETE2RBase> ;
    using EXTEVNT6 = HRTIM_TIME_SETE2R_EXTEVNT6_Values<HRTIM_TIME::SETE2R, 26, 1, ReadWriteMode, HRTIM_TIMESETE2RBase> ;
    using EXTEVNT5 = HRTIM_TIME_SETE2R_EXTEVNT5_Values<HRTIM_TIME::SETE2R, 25, 1, ReadWriteMode, HRTIM_TIMESETE2RBase> ;
    using EXTEVNT4 = HRTIM_TIME_SETE2R_EXTEVNT4_Values<HRTIM_TIME::SETE2R, 24, 1, ReadWriteMode, HRTIM_TIMESETE2RBase> ;
    using EXTEVNT3 = HRTIM_TIME_SETE2R_EXTEVNT3_Values<HRTIM_TIME::SETE2R, 23, 1, ReadWriteMode, HRTIM_TIMESETE2RBase> ;
    using EXTEVNT2 = HRTIM_TIME_SETE2R_EXTEVNT2_Values<HRTIM_TIME::SETE2R, 22, 1, ReadWriteMode, HRTIM_TIMESETE2RBase> ;
    using EXTEVNT1 = HRTIM_TIME_SETE2R_EXTEVNT1_Values<HRTIM_TIME::SETE2R, 21, 1, ReadWriteMode, HRTIM_TIMESETE2RBase> ;
    using TIMEVNT9 = HRTIM_TIME_SETE2R_TIMEVNT9_Values<HRTIM_TIME::SETE2R, 20, 1, ReadWriteMode, HRTIM_TIMESETE2RBase> ;
    using TIMEVNT8 = HRTIM_TIME_SETE2R_TIMEVNT8_Values<HRTIM_TIME::SETE2R, 19, 1, ReadWriteMode, HRTIM_TIMESETE2RBase> ;
    using TIMEVNT7 = HRTIM_TIME_SETE2R_TIMEVNT7_Values<HRTIM_TIME::SETE2R, 18, 1, ReadWriteMode, HRTIM_TIMESETE2RBase> ;
    using TIMEVNT6 = HRTIM_TIME_SETE2R_TIMEVNT6_Values<HRTIM_TIME::SETE2R, 17, 1, ReadWriteMode, HRTIM_TIMESETE2RBase> ;
    using TIMEVNT5 = HRTIM_TIME_SETE2R_TIMEVNT5_Values<HRTIM_TIME::SETE2R, 16, 1, ReadWriteMode, HRTIM_TIMESETE2RBase> ;
    using TIMEVNT4 = HRTIM_TIME_SETE2R_TIMEVNT4_Values<HRTIM_TIME::SETE2R, 15, 1, ReadWriteMode, HRTIM_TIMESETE2RBase> ;
    using TIMEVNT3 = HRTIM_TIME_SETE2R_TIMEVNT3_Values<HRTIM_TIME::SETE2R, 14, 1, ReadWriteMode, HRTIM_TIMESETE2RBase> ;
    using TIMEVNT2 = HRTIM_TIME_SETE2R_TIMEVNT2_Values<HRTIM_TIME::SETE2R, 13, 1, ReadWriteMode, HRTIM_TIMESETE2RBase> ;
    using TIMEVNT1 = HRTIM_TIME_SETE2R_TIMEVNT1_Values<HRTIM_TIME::SETE2R, 12, 1, ReadWriteMode, HRTIM_TIMESETE2RBase> ;
    using MSTCMP4 = HRTIM_TIME_SETE2R_MSTCMP4_Values<HRTIM_TIME::SETE2R, 11, 1, ReadWriteMode, HRTIM_TIMESETE2RBase> ;
    using MSTCMP3 = HRTIM_TIME_SETE2R_MSTCMP3_Values<HRTIM_TIME::SETE2R, 10, 1, ReadWriteMode, HRTIM_TIMESETE2RBase> ;
    using MSTCMP2 = HRTIM_TIME_SETE2R_MSTCMP2_Values<HRTIM_TIME::SETE2R, 9, 1, ReadWriteMode, HRTIM_TIMESETE2RBase> ;
    using MSTCMP1 = HRTIM_TIME_SETE2R_MSTCMP1_Values<HRTIM_TIME::SETE2R, 8, 1, ReadWriteMode, HRTIM_TIMESETE2RBase> ;
    using MSTPER = HRTIM_TIME_SETE2R_MSTPER_Values<HRTIM_TIME::SETE2R, 7, 1, ReadWriteMode, HRTIM_TIMESETE2RBase> ;
    using CMP4 = HRTIM_TIME_SETE2R_CMP4_Values<HRTIM_TIME::SETE2R, 6, 1, ReadWriteMode, HRTIM_TIMESETE2RBase> ;
    using CMP3 = HRTIM_TIME_SETE2R_CMP3_Values<HRTIM_TIME::SETE2R, 5, 1, ReadWriteMode, HRTIM_TIMESETE2RBase> ;
    using CMP2 = HRTIM_TIME_SETE2R_CMP2_Values<HRTIM_TIME::SETE2R, 4, 1, ReadWriteMode, HRTIM_TIMESETE2RBase> ;
    using CMP1 = HRTIM_TIME_SETE2R_CMP1_Values<HRTIM_TIME::SETE2R, 3, 1, ReadWriteMode, HRTIM_TIMESETE2RBase> ;
    using PER = HRTIM_TIME_SETE2R_PER_Values<HRTIM_TIME::SETE2R, 2, 1, ReadWriteMode, HRTIM_TIMESETE2RBase> ;
    using RESYNC = HRTIM_TIME_SETE2R_RESYNC_Values<HRTIM_TIME::SETE2R, 1, 1, ReadWriteMode, HRTIM_TIMESETE2RBase> ;
    using SST = HRTIM_TIME_SETE2R_SST_Values<HRTIM_TIME::SETE2R, 0, 1, ReadWriteMode, HRTIM_TIMESETE2RBase> ;
    using FieldValues = HRTIM_TIME_SETE2R_SST_Values<HRTIM_TIME::SETE2R, 0, 0, NoAccess, NoAccess> ;
  } ;

  template<typename... T> 
  using SETE2RPack  = Register<0x400176C4, 32, ReadWriteMode, HRTIM_TIMESETE2RBase, T...> ;

  struct HRTIM_TIMERSTE2RBase {} ;

  struct RSTE2R : public RegisterBase<0x400176C8, 32, ReadWriteMode>
  {
    using UPDATE = HRTIM_TIME_RSTE2R_UPDATE_Values<HRTIM_TIME::RSTE2R, 31, 1, ReadWriteMode, HRTIM_TIMERSTE2RBase> ;
    using EXTEVNT10 = HRTIM_TIME_RSTE2R_EXTEVNT10_Values<HRTIM_TIME::RSTE2R, 30, 1, ReadWriteMode, HRTIM_TIMERSTE2RBase> ;
    using EXTEVNT9 = HRTIM_TIME_RSTE2R_EXTEVNT9_Values<HRTIM_TIME::RSTE2R, 29, 1, ReadWriteMode, HRTIM_TIMERSTE2RBase> ;
    using EXTEVNT8 = HRTIM_TIME_RSTE2R_EXTEVNT8_Values<HRTIM_TIME::RSTE2R, 28, 1, ReadWriteMode, HRTIM_TIMERSTE2RBase> ;
    using EXTEVNT7 = HRTIM_TIME_RSTE2R_EXTEVNT7_Values<HRTIM_TIME::RSTE2R, 27, 1, ReadWriteMode, HRTIM_TIMERSTE2RBase> ;
    using EXTEVNT6 = HRTIM_TIME_RSTE2R_EXTEVNT6_Values<HRTIM_TIME::RSTE2R, 26, 1, ReadWriteMode, HRTIM_TIMERSTE2RBase> ;
    using EXTEVNT5 = HRTIM_TIME_RSTE2R_EXTEVNT5_Values<HRTIM_TIME::RSTE2R, 25, 1, ReadWriteMode, HRTIM_TIMERSTE2RBase> ;
    using EXTEVNT4 = HRTIM_TIME_RSTE2R_EXTEVNT4_Values<HRTIM_TIME::RSTE2R, 24, 1, ReadWriteMode, HRTIM_TIMERSTE2RBase> ;
    using EXTEVNT3 = HRTIM_TIME_RSTE2R_EXTEVNT3_Values<HRTIM_TIME::RSTE2R, 23, 1, ReadWriteMode, HRTIM_TIMERSTE2RBase> ;
    using EXTEVNT2 = HRTIM_TIME_RSTE2R_EXTEVNT2_Values<HRTIM_TIME::RSTE2R, 22, 1, ReadWriteMode, HRTIM_TIMERSTE2RBase> ;
    using EXTEVNT1 = HRTIM_TIME_RSTE2R_EXTEVNT1_Values<HRTIM_TIME::RSTE2R, 21, 1, ReadWriteMode, HRTIM_TIMERSTE2RBase> ;
    using TIMEVNT9 = HRTIM_TIME_RSTE2R_TIMEVNT9_Values<HRTIM_TIME::RSTE2R, 20, 1, ReadWriteMode, HRTIM_TIMERSTE2RBase> ;
    using TIMEVNT8 = HRTIM_TIME_RSTE2R_TIMEVNT8_Values<HRTIM_TIME::RSTE2R, 19, 1, ReadWriteMode, HRTIM_TIMERSTE2RBase> ;
    using TIMEVNT7 = HRTIM_TIME_RSTE2R_TIMEVNT7_Values<HRTIM_TIME::RSTE2R, 18, 1, ReadWriteMode, HRTIM_TIMERSTE2RBase> ;
    using TIMEVNT6 = HRTIM_TIME_RSTE2R_TIMEVNT6_Values<HRTIM_TIME::RSTE2R, 17, 1, ReadWriteMode, HRTIM_TIMERSTE2RBase> ;
    using TIMEVNT5 = HRTIM_TIME_RSTE2R_TIMEVNT5_Values<HRTIM_TIME::RSTE2R, 16, 1, ReadWriteMode, HRTIM_TIMERSTE2RBase> ;
    using TIMEVNT4 = HRTIM_TIME_RSTE2R_TIMEVNT4_Values<HRTIM_TIME::RSTE2R, 15, 1, ReadWriteMode, HRTIM_TIMERSTE2RBase> ;
    using TIMEVNT3 = HRTIM_TIME_RSTE2R_TIMEVNT3_Values<HRTIM_TIME::RSTE2R, 14, 1, ReadWriteMode, HRTIM_TIMERSTE2RBase> ;
    using TIMEVNT2 = HRTIM_TIME_RSTE2R_TIMEVNT2_Values<HRTIM_TIME::RSTE2R, 13, 1, ReadWriteMode, HRTIM_TIMERSTE2RBase> ;
    using TIMEVNT1 = HRTIM_TIME_RSTE2R_TIMEVNT1_Values<HRTIM_TIME::RSTE2R, 12, 1, ReadWriteMode, HRTIM_TIMERSTE2RBase> ;
    using MSTCMP4 = HRTIM_TIME_RSTE2R_MSTCMP4_Values<HRTIM_TIME::RSTE2R, 11, 1, ReadWriteMode, HRTIM_TIMERSTE2RBase> ;
    using MSTCMP3 = HRTIM_TIME_RSTE2R_MSTCMP3_Values<HRTIM_TIME::RSTE2R, 10, 1, ReadWriteMode, HRTIM_TIMERSTE2RBase> ;
    using MSTCMP2 = HRTIM_TIME_RSTE2R_MSTCMP2_Values<HRTIM_TIME::RSTE2R, 9, 1, ReadWriteMode, HRTIM_TIMERSTE2RBase> ;
    using MSTCMP1 = HRTIM_TIME_RSTE2R_MSTCMP1_Values<HRTIM_TIME::RSTE2R, 8, 1, ReadWriteMode, HRTIM_TIMERSTE2RBase> ;
    using MSTPER = HRTIM_TIME_RSTE2R_MSTPER_Values<HRTIM_TIME::RSTE2R, 7, 1, ReadWriteMode, HRTIM_TIMERSTE2RBase> ;
    using CMP4 = HRTIM_TIME_RSTE2R_CMP4_Values<HRTIM_TIME::RSTE2R, 6, 1, ReadWriteMode, HRTIM_TIMERSTE2RBase> ;
    using CMP3 = HRTIM_TIME_RSTE2R_CMP3_Values<HRTIM_TIME::RSTE2R, 5, 1, ReadWriteMode, HRTIM_TIMERSTE2RBase> ;
    using CMP2 = HRTIM_TIME_RSTE2R_CMP2_Values<HRTIM_TIME::RSTE2R, 4, 1, ReadWriteMode, HRTIM_TIMERSTE2RBase> ;
    using CMP1 = HRTIM_TIME_RSTE2R_CMP1_Values<HRTIM_TIME::RSTE2R, 3, 1, ReadWriteMode, HRTIM_TIMERSTE2RBase> ;
    using PER = HRTIM_TIME_RSTE2R_PER_Values<HRTIM_TIME::RSTE2R, 2, 1, ReadWriteMode, HRTIM_TIMERSTE2RBase> ;
    using RESYNC = HRTIM_TIME_RSTE2R_RESYNC_Values<HRTIM_TIME::RSTE2R, 1, 1, ReadWriteMode, HRTIM_TIMERSTE2RBase> ;
    using SRT = HRTIM_TIME_RSTE2R_SRT_Values<HRTIM_TIME::RSTE2R, 0, 1, ReadWriteMode, HRTIM_TIMERSTE2RBase> ;
    using FieldValues = HRTIM_TIME_RSTE2R_SRT_Values<HRTIM_TIME::RSTE2R, 0, 0, NoAccess, NoAccess> ;
  } ;

  template<typename... T> 
  using RSTE2RPack  = Register<0x400176C8, 32, ReadWriteMode, HRTIM_TIMERSTE2RBase, T...> ;

  struct HRTIM_TIMEEEFER1Base {} ;

  struct EEFER1 : public RegisterBase<0x400176CC, 32, ReadWriteMode>
  {
    using EE5FLTR = HRTIM_TIME_EEFER1_EE5FLTR_Values<HRTIM_TIME::EEFER1, 25, 4, ReadWriteMode, HRTIM_TIMEEEFER1Base> ;
    using EE5LTCH = HRTIM_TIME_EEFER1_EE5LTCH_Values<HRTIM_TIME::EEFER1, 24, 1, ReadWriteMode, HRTIM_TIMEEEFER1Base> ;
    using EE4FLTR = HRTIM_TIME_EEFER1_EE4FLTR_Values<HRTIM_TIME::EEFER1, 19, 4, ReadWriteMode, HRTIM_TIMEEEFER1Base> ;
    using EE4LTCH = HRTIM_TIME_EEFER1_EE4LTCH_Values<HRTIM_TIME::EEFER1, 18, 1, ReadWriteMode, HRTIM_TIMEEEFER1Base> ;
    using EE3FLTR = HRTIM_TIME_EEFER1_EE3FLTR_Values<HRTIM_TIME::EEFER1, 13, 4, ReadWriteMode, HRTIM_TIMEEEFER1Base> ;
    using EE3LTCH = HRTIM_TIME_EEFER1_EE3LTCH_Values<HRTIM_TIME::EEFER1, 12, 1, ReadWriteMode, HRTIM_TIMEEEFER1Base> ;
    using EE2FLTR = HRTIM_TIME_EEFER1_EE2FLTR_Values<HRTIM_TIME::EEFER1, 7, 4, ReadWriteMode, HRTIM_TIMEEEFER1Base> ;
    using EE2LTCH = HRTIM_TIME_EEFER1_EE2LTCH_Values<HRTIM_TIME::EEFER1, 6, 1, ReadWriteMode, HRTIM_TIMEEEFER1Base> ;
    using EE1FLTR = HRTIM_TIME_EEFER1_EE1FLTR_Values<HRTIM_TIME::EEFER1, 1, 4, ReadWriteMode, HRTIM_TIMEEEFER1Base> ;
    using EE1LTCH = HRTIM_TIME_EEFER1_EE1LTCH_Values<HRTIM_TIME::EEFER1, 0, 1, ReadWriteMode, HRTIM_TIMEEEFER1Base> ;
    using FieldValues = HRTIM_TIME_EEFER1_EE1LTCH_Values<HRTIM_TIME::EEFER1, 0, 0, NoAccess, NoAccess> ;
  } ;

  template<typename... T> 
  using EEFER1Pack  = Register<0x400176CC, 32, ReadWriteMode, HRTIM_TIMEEEFER1Base, T...> ;

  struct HRTIM_TIMEEEFER2Base {} ;

  struct EEFER2 : public RegisterBase<0x400176D0, 32, ReadWriteMode>
  {
    using EE10FLTR = HRTIM_TIME_EEFER2_EE10FLTR_Values<HRTIM_TIME::EEFER2, 25, 4, ReadWriteMode, HRTIM_TIMEEEFER2Base> ;
    using EE10LTCH = HRTIM_TIME_EEFER2_EE10LTCH_Values<HRTIM_TIME::EEFER2, 24, 1, ReadWriteMode, HRTIM_TIMEEEFER2Base> ;
    using EE9FLTR = HRTIM_TIME_EEFER2_EE9FLTR_Values<HRTIM_TIME::EEFER2, 19, 4, ReadWriteMode, HRTIM_TIMEEEFER2Base> ;
    using EE9LTCH = HRTIM_TIME_EEFER2_EE9LTCH_Values<HRTIM_TIME::EEFER2, 18, 1, ReadWriteMode, HRTIM_TIMEEEFER2Base> ;
    using EE8FLTR = HRTIM_TIME_EEFER2_EE8FLTR_Values<HRTIM_TIME::EEFER2, 13, 4, ReadWriteMode, HRTIM_TIMEEEFER2Base> ;
    using EE8LTCH = HRTIM_TIME_EEFER2_EE8LTCH_Values<HRTIM_TIME::EEFER2, 12, 1, ReadWriteMode, HRTIM_TIMEEEFER2Base> ;
    using EE7FLTR = HRTIM_TIME_EEFER2_EE7FLTR_Values<HRTIM_TIME::EEFER2, 7, 4, ReadWriteMode, HRTIM_TIMEEEFER2Base> ;
    using EE7LTCH = HRTIM_TIME_EEFER2_EE7LTCH_Values<HRTIM_TIME::EEFER2, 6, 1, ReadWriteMode, HRTIM_TIMEEEFER2Base> ;
    using EE6FLTR = HRTIM_TIME_EEFER2_EE6FLTR_Values<HRTIM_TIME::EEFER2, 1, 4, ReadWriteMode, HRTIM_TIMEEEFER2Base> ;
    using EE6LTCH = HRTIM_TIME_EEFER2_EE6LTCH_Values<HRTIM_TIME::EEFER2, 0, 1, ReadWriteMode, HRTIM_TIMEEEFER2Base> ;
    using FieldValues = HRTIM_TIME_EEFER2_EE6LTCH_Values<HRTIM_TIME::EEFER2, 0, 0, NoAccess, NoAccess> ;
  } ;

  template<typename... T> 
  using EEFER2Pack  = Register<0x400176D0, 32, ReadWriteMode, HRTIM_TIMEEEFER2Base, T...> ;

  struct HRTIM_TIMERSTERBase {} ;

  struct RSTER : public RegisterBase<0x400176D4, 32, ReadWriteMode>
  {
    using TIMDCMP4 = HRTIM_TIME_RSTER_TIMDCMP4_Values<HRTIM_TIME::RSTER, 30, 1, ReadWriteMode, HRTIM_TIMERSTERBase> ;
    using TIMDCMP2 = HRTIM_TIME_RSTER_TIMDCMP2_Values<HRTIM_TIME::RSTER, 29, 1, ReadWriteMode, HRTIM_TIMERSTERBase> ;
    using TIMDCMP1 = HRTIM_TIME_RSTER_TIMDCMP1_Values<HRTIM_TIME::RSTER, 28, 1, ReadWriteMode, HRTIM_TIMERSTERBase> ;
    using TIMCCMP4 = HRTIM_TIME_RSTER_TIMCCMP4_Values<HRTIM_TIME::RSTER, 27, 1, ReadWriteMode, HRTIM_TIMERSTERBase> ;
    using TIMCCMP2 = HRTIM_TIME_RSTER_TIMCCMP2_Values<HRTIM_TIME::RSTER, 26, 1, ReadWriteMode, HRTIM_TIMERSTERBase> ;
    using TIMCCMP1 = HRTIM_TIME_RSTER_TIMCCMP1_Values<HRTIM_TIME::RSTER, 25, 1, ReadWriteMode, HRTIM_TIMERSTERBase> ;
    using TIMBCMP4 = HRTIM_TIME_RSTER_TIMBCMP4_Values<HRTIM_TIME::RSTER, 24, 1, ReadWriteMode, HRTIM_TIMERSTERBase> ;
    using TIMBCMP2 = HRTIM_TIME_RSTER_TIMBCMP2_Values<HRTIM_TIME::RSTER, 23, 1, ReadWriteMode, HRTIM_TIMERSTERBase> ;
    using TIMBCMP1 = HRTIM_TIME_RSTER_TIMBCMP1_Values<HRTIM_TIME::RSTER, 22, 1, ReadWriteMode, HRTIM_TIMERSTERBase> ;
    using TIMACMP4 = HRTIM_TIME_RSTER_TIMACMP4_Values<HRTIM_TIME::RSTER, 21, 1, ReadWriteMode, HRTIM_TIMERSTERBase> ;
    using TIMACMP2 = HRTIM_TIME_RSTER_TIMACMP2_Values<HRTIM_TIME::RSTER, 20, 1, ReadWriteMode, HRTIM_TIMERSTERBase> ;
    using TIMACMP1 = HRTIM_TIME_RSTER_TIMACMP1_Values<HRTIM_TIME::RSTER, 19, 1, ReadWriteMode, HRTIM_TIMERSTERBase> ;
    using EXTEVNT10 = HRTIM_TIME_RSTER_EXTEVNT10_Values<HRTIM_TIME::RSTER, 18, 1, ReadWriteMode, HRTIM_TIMERSTERBase> ;
    using EXTEVNT9 = HRTIM_TIME_RSTER_EXTEVNT9_Values<HRTIM_TIME::RSTER, 17, 1, ReadWriteMode, HRTIM_TIMERSTERBase> ;
    using EXTEVNT8 = HRTIM_TIME_RSTER_EXTEVNT8_Values<HRTIM_TIME::RSTER, 16, 1, ReadWriteMode, HRTIM_TIMERSTERBase> ;
    using EXTEVNT7 = HRTIM_TIME_RSTER_EXTEVNT7_Values<HRTIM_TIME::RSTER, 15, 1, ReadWriteMode, HRTIM_TIMERSTERBase> ;
    using EXTEVNT6 = HRTIM_TIME_RSTER_EXTEVNT6_Values<HRTIM_TIME::RSTER, 14, 1, ReadWriteMode, HRTIM_TIMERSTERBase> ;
    using EXTEVNT5 = HRTIM_TIME_RSTER_EXTEVNT5_Values<HRTIM_TIME::RSTER, 13, 1, ReadWriteMode, HRTIM_TIMERSTERBase> ;
    using EXTEVNT4 = HRTIM_TIME_RSTER_EXTEVNT4_Values<HRTIM_TIME::RSTER, 12, 1, ReadWriteMode, HRTIM_TIMERSTERBase> ;
    using EXTEVNT3 = HRTIM_TIME_RSTER_EXTEVNT3_Values<HRTIM_TIME::RSTER, 11, 1, ReadWriteMode, HRTIM_TIMERSTERBase> ;
    using EXTEVNT2 = HRTIM_TIME_RSTER_EXTEVNT2_Values<HRTIM_TIME::RSTER, 10, 1, ReadWriteMode, HRTIM_TIMERSTERBase> ;
    using EXTEVNT1 = HRTIM_TIME_RSTER_EXTEVNT1_Values<HRTIM_TIME::RSTER, 9, 1, ReadWriteMode, HRTIM_TIMERSTERBase> ;
    using MSTCMP4 = HRTIM_TIME_RSTER_MSTCMP4_Values<HRTIM_TIME::RSTER, 8, 1, ReadWriteMode, HRTIM_TIMERSTERBase> ;
    using MSTCMP3 = HRTIM_TIME_RSTER_MSTCMP3_Values<HRTIM_TIME::RSTER, 7, 1, ReadWriteMode, HRTIM_TIMERSTERBase> ;
    using MSTCMP2 = HRTIM_TIME_RSTER_MSTCMP2_Values<HRTIM_TIME::RSTER, 6, 1, ReadWriteMode, HRTIM_TIMERSTERBase> ;
    using MSTCMP1 = HRTIM_TIME_RSTER_MSTCMP1_Values<HRTIM_TIME::RSTER, 5, 1, ReadWriteMode, HRTIM_TIMERSTERBase> ;
    using MSTPER = HRTIM_TIME_RSTER_MSTPER_Values<HRTIM_TIME::RSTER, 4, 1, ReadWriteMode, HRTIM_TIMERSTERBase> ;
    using CMP4 = HRTIM_TIME_RSTER_CMP4_Values<HRTIM_TIME::RSTER, 3, 1, ReadWriteMode, HRTIM_TIMERSTERBase> ;
    using CMP2 = HRTIM_TIME_RSTER_CMP2_Values<HRTIM_TIME::RSTER, 2, 1, ReadWriteMode, HRTIM_TIMERSTERBase> ;
    using UPDT = HRTIM_TIME_RSTER_UPDT_Values<HRTIM_TIME::RSTER, 1, 1, ReadWriteMode, HRTIM_TIMERSTERBase> ;
    using FieldValues = HRTIM_TIME_RSTER_UPDT_Values<HRTIM_TIME::RSTER, 0, 0, NoAccess, NoAccess> ;
  } ;

  template<typename... T> 
  using RSTERPack  = Register<0x400176D4, 32, ReadWriteMode, HRTIM_TIMERSTERBase, T...> ;

  struct HRTIM_TIMECHPERBase {} ;

  struct CHPER : public RegisterBase<0x400176D8, 32, ReadWriteMode>
  {
    using STRTPW = HRTIM_TIME_CHPER_STRTPW_Values<HRTIM_TIME::CHPER, 7, 4, ReadWriteMode, HRTIM_TIMECHPERBase> ;
    using CHPDTY = HRTIM_TIME_CHPER_CHPDTY_Values<HRTIM_TIME::CHPER, 4, 3, ReadWriteMode, HRTIM_TIMECHPERBase> ;
    using CHPFRQ = HRTIM_TIME_CHPER_CHPFRQ_Values<HRTIM_TIME::CHPER, 0, 4, ReadWriteMode, HRTIM_TIMECHPERBase> ;
    using FieldValues = HRTIM_TIME_CHPER_CHPFRQ_Values<HRTIM_TIME::CHPER, 0, 0, NoAccess, NoAccess> ;
  } ;

  template<typename... T> 
  using CHPERPack  = Register<0x400176D8, 32, ReadWriteMode, HRTIM_TIMECHPERBase, T...> ;

  struct HRTIM_TIMECPT1ECRBase {} ;

  struct CPT1ECR : public RegisterBase<0x400176DC, 32, ReadWriteMode>
  {
    using TDCMP2 = HRTIM_TIME_CPT1ECR_TDCMP2_Values<HRTIM_TIME::CPT1ECR, 27, 1, ReadWriteMode, HRTIM_TIMECPT1ECRBase> ;
    using TDCMP1 = HRTIM_TIME_CPT1ECR_TDCMP1_Values<HRTIM_TIME::CPT1ECR, 26, 1, ReadWriteMode, HRTIM_TIMECPT1ECRBase> ;
    using TD1RST = HRTIM_TIME_CPT1ECR_TD1RST_Values<HRTIM_TIME::CPT1ECR, 25, 1, ReadWriteMode, HRTIM_TIMECPT1ECRBase> ;
    using TD1SET = HRTIM_TIME_CPT1ECR_TD1SET_Values<HRTIM_TIME::CPT1ECR, 24, 1, ReadWriteMode, HRTIM_TIMECPT1ECRBase> ;
    using TCCMP2 = HRTIM_TIME_CPT1ECR_TCCMP2_Values<HRTIM_TIME::CPT1ECR, 23, 1, ReadWriteMode, HRTIM_TIMECPT1ECRBase> ;
    using TCCMP1 = HRTIM_TIME_CPT1ECR_TCCMP1_Values<HRTIM_TIME::CPT1ECR, 22, 1, ReadWriteMode, HRTIM_TIMECPT1ECRBase> ;
    using TC1RST = HRTIM_TIME_CPT1ECR_TC1RST_Values<HRTIM_TIME::CPT1ECR, 21, 1, ReadWriteMode, HRTIM_TIMECPT1ECRBase> ;
    using TC1SET = HRTIM_TIME_CPT1ECR_TC1SET_Values<HRTIM_TIME::CPT1ECR, 20, 1, ReadWriteMode, HRTIM_TIMECPT1ECRBase> ;
    using TBCMP2 = HRTIM_TIME_CPT1ECR_TBCMP2_Values<HRTIM_TIME::CPT1ECR, 19, 1, ReadWriteMode, HRTIM_TIMECPT1ECRBase> ;
    using TBCMP1 = HRTIM_TIME_CPT1ECR_TBCMP1_Values<HRTIM_TIME::CPT1ECR, 18, 1, ReadWriteMode, HRTIM_TIMECPT1ECRBase> ;
    using TB1RST = HRTIM_TIME_CPT1ECR_TB1RST_Values<HRTIM_TIME::CPT1ECR, 17, 1, ReadWriteMode, HRTIM_TIMECPT1ECRBase> ;
    using TB1SET = HRTIM_TIME_CPT1ECR_TB1SET_Values<HRTIM_TIME::CPT1ECR, 16, 1, ReadWriteMode, HRTIM_TIMECPT1ECRBase> ;
    using TACMP2 = HRTIM_TIME_CPT1ECR_TACMP2_Values<HRTIM_TIME::CPT1ECR, 15, 1, ReadWriteMode, HRTIM_TIMECPT1ECRBase> ;
    using TACMP1 = HRTIM_TIME_CPT1ECR_TACMP1_Values<HRTIM_TIME::CPT1ECR, 14, 1, ReadWriteMode, HRTIM_TIMECPT1ECRBase> ;
    using TA1RST = HRTIM_TIME_CPT1ECR_TA1RST_Values<HRTIM_TIME::CPT1ECR, 13, 1, ReadWriteMode, HRTIM_TIMECPT1ECRBase> ;
    using TA1SET = HRTIM_TIME_CPT1ECR_TA1SET_Values<HRTIM_TIME::CPT1ECR, 12, 1, ReadWriteMode, HRTIM_TIMECPT1ECRBase> ;
    using EXEV10CPT = HRTIM_TIME_CPT1ECR_EXEV10CPT_Values<HRTIM_TIME::CPT1ECR, 11, 1, ReadWriteMode, HRTIM_TIMECPT1ECRBase> ;
    using EXEV9CPT = HRTIM_TIME_CPT1ECR_EXEV9CPT_Values<HRTIM_TIME::CPT1ECR, 10, 1, ReadWriteMode, HRTIM_TIMECPT1ECRBase> ;
    using EXEV8CPT = HRTIM_TIME_CPT1ECR_EXEV8CPT_Values<HRTIM_TIME::CPT1ECR, 9, 1, ReadWriteMode, HRTIM_TIMECPT1ECRBase> ;
    using EXEV7CPT = HRTIM_TIME_CPT1ECR_EXEV7CPT_Values<HRTIM_TIME::CPT1ECR, 8, 1, ReadWriteMode, HRTIM_TIMECPT1ECRBase> ;
    using EXEV6CPT = HRTIM_TIME_CPT1ECR_EXEV6CPT_Values<HRTIM_TIME::CPT1ECR, 7, 1, ReadWriteMode, HRTIM_TIMECPT1ECRBase> ;
    using EXEV5CPT = HRTIM_TIME_CPT1ECR_EXEV5CPT_Values<HRTIM_TIME::CPT1ECR, 6, 1, ReadWriteMode, HRTIM_TIMECPT1ECRBase> ;
    using EXEV4CPT = HRTIM_TIME_CPT1ECR_EXEV4CPT_Values<HRTIM_TIME::CPT1ECR, 5, 1, ReadWriteMode, HRTIM_TIMECPT1ECRBase> ;
    using EXEV3CPT = HRTIM_TIME_CPT1ECR_EXEV3CPT_Values<HRTIM_TIME::CPT1ECR, 4, 1, ReadWriteMode, HRTIM_TIMECPT1ECRBase> ;
    using EXEV2CPT = HRTIM_TIME_CPT1ECR_EXEV2CPT_Values<HRTIM_TIME::CPT1ECR, 3, 1, ReadWriteMode, HRTIM_TIMECPT1ECRBase> ;
    using EXEV1CPT = HRTIM_TIME_CPT1ECR_EXEV1CPT_Values<HRTIM_TIME::CPT1ECR, 2, 1, ReadWriteMode, HRTIM_TIMECPT1ECRBase> ;
    using UDPCPT = HRTIM_TIME_CPT1ECR_UDPCPT_Values<HRTIM_TIME::CPT1ECR, 1, 1, ReadWriteMode, HRTIM_TIMECPT1ECRBase> ;
    using SWCPT = HRTIM_TIME_CPT1ECR_SWCPT_Values<HRTIM_TIME::CPT1ECR, 0, 1, ReadWriteMode, HRTIM_TIMECPT1ECRBase> ;
    using FieldValues = HRTIM_TIME_CPT1ECR_SWCPT_Values<HRTIM_TIME::CPT1ECR, 0, 0, NoAccess, NoAccess> ;
  } ;

  template<typename... T> 
  using CPT1ECRPack  = Register<0x400176DC, 32, ReadWriteMode, HRTIM_TIMECPT1ECRBase, T...> ;

  struct HRTIM_TIMECPT2ECRBase {} ;

  struct CPT2ECR : public RegisterBase<0x400176E0, 32, ReadWriteMode>
  {
    using TDCMP2 = HRTIM_TIME_CPT2ECR_TDCMP2_Values<HRTIM_TIME::CPT2ECR, 27, 1, ReadWriteMode, HRTIM_TIMECPT2ECRBase> ;
    using TDCMP1 = HRTIM_TIME_CPT2ECR_TDCMP1_Values<HRTIM_TIME::CPT2ECR, 26, 1, ReadWriteMode, HRTIM_TIMECPT2ECRBase> ;
    using TD1RST = HRTIM_TIME_CPT2ECR_TD1RST_Values<HRTIM_TIME::CPT2ECR, 25, 1, ReadWriteMode, HRTIM_TIMECPT2ECRBase> ;
    using TD1SET = HRTIM_TIME_CPT2ECR_TD1SET_Values<HRTIM_TIME::CPT2ECR, 24, 1, ReadWriteMode, HRTIM_TIMECPT2ECRBase> ;
    using TCCMP2 = HRTIM_TIME_CPT2ECR_TCCMP2_Values<HRTIM_TIME::CPT2ECR, 23, 1, ReadWriteMode, HRTIM_TIMECPT2ECRBase> ;
    using TCCMP1 = HRTIM_TIME_CPT2ECR_TCCMP1_Values<HRTIM_TIME::CPT2ECR, 22, 1, ReadWriteMode, HRTIM_TIMECPT2ECRBase> ;
    using TC1RST = HRTIM_TIME_CPT2ECR_TC1RST_Values<HRTIM_TIME::CPT2ECR, 21, 1, ReadWriteMode, HRTIM_TIMECPT2ECRBase> ;
    using TC1SET = HRTIM_TIME_CPT2ECR_TC1SET_Values<HRTIM_TIME::CPT2ECR, 20, 1, ReadWriteMode, HRTIM_TIMECPT2ECRBase> ;
    using TBCMP2 = HRTIM_TIME_CPT2ECR_TBCMP2_Values<HRTIM_TIME::CPT2ECR, 19, 1, ReadWriteMode, HRTIM_TIMECPT2ECRBase> ;
    using TBCMP1 = HRTIM_TIME_CPT2ECR_TBCMP1_Values<HRTIM_TIME::CPT2ECR, 18, 1, ReadWriteMode, HRTIM_TIMECPT2ECRBase> ;
    using TB1RST = HRTIM_TIME_CPT2ECR_TB1RST_Values<HRTIM_TIME::CPT2ECR, 17, 1, ReadWriteMode, HRTIM_TIMECPT2ECRBase> ;
    using TB1SET = HRTIM_TIME_CPT2ECR_TB1SET_Values<HRTIM_TIME::CPT2ECR, 16, 1, ReadWriteMode, HRTIM_TIMECPT2ECRBase> ;
    using TACMP2 = HRTIM_TIME_CPT2ECR_TACMP2_Values<HRTIM_TIME::CPT2ECR, 15, 1, ReadWriteMode, HRTIM_TIMECPT2ECRBase> ;
    using TACMP1 = HRTIM_TIME_CPT2ECR_TACMP1_Values<HRTIM_TIME::CPT2ECR, 14, 1, ReadWriteMode, HRTIM_TIMECPT2ECRBase> ;
    using TA1RST = HRTIM_TIME_CPT2ECR_TA1RST_Values<HRTIM_TIME::CPT2ECR, 13, 1, ReadWriteMode, HRTIM_TIMECPT2ECRBase> ;
    using TA1SET = HRTIM_TIME_CPT2ECR_TA1SET_Values<HRTIM_TIME::CPT2ECR, 12, 1, ReadWriteMode, HRTIM_TIMECPT2ECRBase> ;
    using EXEV10CPT = HRTIM_TIME_CPT2ECR_EXEV10CPT_Values<HRTIM_TIME::CPT2ECR, 11, 1, ReadWriteMode, HRTIM_TIMECPT2ECRBase> ;
    using EXEV9CPT = HRTIM_TIME_CPT2ECR_EXEV9CPT_Values<HRTIM_TIME::CPT2ECR, 10, 1, ReadWriteMode, HRTIM_TIMECPT2ECRBase> ;
    using EXEV8CPT = HRTIM_TIME_CPT2ECR_EXEV8CPT_Values<HRTIM_TIME::CPT2ECR, 9, 1, ReadWriteMode, HRTIM_TIMECPT2ECRBase> ;
    using EXEV7CPT = HRTIM_TIME_CPT2ECR_EXEV7CPT_Values<HRTIM_TIME::CPT2ECR, 8, 1, ReadWriteMode, HRTIM_TIMECPT2ECRBase> ;
    using EXEV6CPT = HRTIM_TIME_CPT2ECR_EXEV6CPT_Values<HRTIM_TIME::CPT2ECR, 7, 1, ReadWriteMode, HRTIM_TIMECPT2ECRBase> ;
    using EXEV5CPT = HRTIM_TIME_CPT2ECR_EXEV5CPT_Values<HRTIM_TIME::CPT2ECR, 6, 1, ReadWriteMode, HRTIM_TIMECPT2ECRBase> ;
    using EXEV4CPT = HRTIM_TIME_CPT2ECR_EXEV4CPT_Values<HRTIM_TIME::CPT2ECR, 5, 1, ReadWriteMode, HRTIM_TIMECPT2ECRBase> ;
    using EXEV3CPT = HRTIM_TIME_CPT2ECR_EXEV3CPT_Values<HRTIM_TIME::CPT2ECR, 4, 1, ReadWriteMode, HRTIM_TIMECPT2ECRBase> ;
    using EXEV2CPT = HRTIM_TIME_CPT2ECR_EXEV2CPT_Values<HRTIM_TIME::CPT2ECR, 3, 1, ReadWriteMode, HRTIM_TIMECPT2ECRBase> ;
    using EXEV1CPT = HRTIM_TIME_CPT2ECR_EXEV1CPT_Values<HRTIM_TIME::CPT2ECR, 2, 1, ReadWriteMode, HRTIM_TIMECPT2ECRBase> ;
    using UDPCPT = HRTIM_TIME_CPT2ECR_UDPCPT_Values<HRTIM_TIME::CPT2ECR, 1, 1, ReadWriteMode, HRTIM_TIMECPT2ECRBase> ;
    using SWCPT = HRTIM_TIME_CPT2ECR_SWCPT_Values<HRTIM_TIME::CPT2ECR, 0, 1, ReadWriteMode, HRTIM_TIMECPT2ECRBase> ;
    using FieldValues = HRTIM_TIME_CPT2ECR_SWCPT_Values<HRTIM_TIME::CPT2ECR, 0, 0, NoAccess, NoAccess> ;
  } ;

  template<typename... T> 
  using CPT2ECRPack  = Register<0x400176E0, 32, ReadWriteMode, HRTIM_TIMECPT2ECRBase, T...> ;

  struct HRTIM_TIMEOUTERBase {} ;

  struct OUTER : public RegisterBase<0x400176E4, 32, ReadWriteMode>
  {
    using DIDL2 = HRTIM_TIME_OUTER_DIDL2_Values<HRTIM_TIME::OUTER, 23, 1, ReadWriteMode, HRTIM_TIMEOUTERBase> ;
    using CHP2 = HRTIM_TIME_OUTER_CHP2_Values<HRTIM_TIME::OUTER, 22, 1, ReadWriteMode, HRTIM_TIMEOUTERBase> ;
    using FAULT2 = HRTIM_TIME_OUTER_FAULT2_Values<HRTIM_TIME::OUTER, 20, 2, ReadWriteMode, HRTIM_TIMEOUTERBase> ;
    using IDLES2 = HRTIM_TIME_OUTER_IDLES2_Values<HRTIM_TIME::OUTER, 19, 1, ReadWriteMode, HRTIM_TIMEOUTERBase> ;
    using IDLEM2 = HRTIM_TIME_OUTER_IDLEM2_Values<HRTIM_TIME::OUTER, 18, 1, ReadWriteMode, HRTIM_TIMEOUTERBase> ;
    using POL2 = HRTIM_TIME_OUTER_POL2_Values<HRTIM_TIME::OUTER, 17, 1, ReadWriteMode, HRTIM_TIMEOUTERBase> ;
    using DLYPRT = HRTIM_TIME_OUTER_DLYPRT_Values<HRTIM_TIME::OUTER, 10, 3, ReadWriteMode, HRTIM_TIMEOUTERBase> ;
    using DLYPRTEN = HRTIM_TIME_OUTER_DLYPRTEN_Values<HRTIM_TIME::OUTER, 9, 1, ReadWriteMode, HRTIM_TIMEOUTERBase> ;
    using DTEN = HRTIM_TIME_OUTER_DTEN_Values<HRTIM_TIME::OUTER, 8, 1, ReadWriteMode, HRTIM_TIMEOUTERBase> ;
    using DIDL1 = HRTIM_TIME_OUTER_DIDL1_Values<HRTIM_TIME::OUTER, 7, 1, ReadWriteMode, HRTIM_TIMEOUTERBase> ;
    using CHP1 = HRTIM_TIME_OUTER_CHP1_Values<HRTIM_TIME::OUTER, 6, 1, ReadWriteMode, HRTIM_TIMEOUTERBase> ;
    using FAULT1 = HRTIM_TIME_OUTER_FAULT1_Values<HRTIM_TIME::OUTER, 4, 2, ReadWriteMode, HRTIM_TIMEOUTERBase> ;
    using IDLES1 = HRTIM_TIME_OUTER_IDLES1_Values<HRTIM_TIME::OUTER, 3, 1, ReadWriteMode, HRTIM_TIMEOUTERBase> ;
    using IDLEM1 = HRTIM_TIME_OUTER_IDLEM1_Values<HRTIM_TIME::OUTER, 2, 1, ReadWriteMode, HRTIM_TIMEOUTERBase> ;
    using POL1 = HRTIM_TIME_OUTER_POL1_Values<HRTIM_TIME::OUTER, 1, 1, ReadWriteMode, HRTIM_TIMEOUTERBase> ;
    using FieldValues = HRTIM_TIME_OUTER_POL1_Values<HRTIM_TIME::OUTER, 0, 0, NoAccess, NoAccess> ;
  } ;

  template<typename... T> 
  using OUTERPack  = Register<0x400176E4, 32, ReadWriteMode, HRTIM_TIMEOUTERBase, T...> ;

  struct HRTIM_TIMEFLTERBase {} ;

  struct FLTER : public RegisterBase<0x400176E8, 32, ReadWriteMode>
  {
    using FLTLCK = HRTIM_TIME_FLTER_FLTLCK_Values<HRTIM_TIME::FLTER, 31, 1, ReadWriteMode, HRTIM_TIMEFLTERBase> ;
    using FLT5EN = HRTIM_TIME_FLTER_FLT5EN_Values<HRTIM_TIME::FLTER, 4, 1, ReadWriteMode, HRTIM_TIMEFLTERBase> ;
    using FLT4EN = HRTIM_TIME_FLTER_FLT4EN_Values<HRTIM_TIME::FLTER, 3, 1, ReadWriteMode, HRTIM_TIMEFLTERBase> ;
    using FLT3EN = HRTIM_TIME_FLTER_FLT3EN_Values<HRTIM_TIME::FLTER, 2, 1, ReadWriteMode, HRTIM_TIMEFLTERBase> ;
    using FLT2EN = HRTIM_TIME_FLTER_FLT2EN_Values<HRTIM_TIME::FLTER, 1, 1, ReadWriteMode, HRTIM_TIMEFLTERBase> ;
    using FLT1EN = HRTIM_TIME_FLTER_FLT1EN_Values<HRTIM_TIME::FLTER, 0, 1, ReadWriteMode, HRTIM_TIMEFLTERBase> ;
    using FieldValues = HRTIM_TIME_FLTER_FLT1EN_Values<HRTIM_TIME::FLTER, 0, 0, NoAccess, NoAccess> ;
  } ;

  template<typename... T> 
  using FLTERPack  = Register<0x400176E8, 32, ReadWriteMode, HRTIM_TIMEFLTERBase, T...> ;

} ;

#endif //#if !defined(HRTIMTIMEREGISTERS_HPP)
